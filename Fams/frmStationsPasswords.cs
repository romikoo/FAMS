using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Globalization;
using System.IO;
using System.Net;
using System.Net.NetworkInformation;
using System.Threading;
using System.Windows.Forms;
using System.Xml;
using Earth.CustomMarkers;
using System.Collections.Specialized;
using System.Data;
using System.Data.SqlClient;
using Helpers;
using Grid = DevExpress.XtraGrid.Views.Grid;
using System.Collections;

namespace Fams
{
    public partial class frmStationsPasswords : DevExpress.XtraBars.Ribbon.RibbonForm
    {

      

        
        private User _user;
        System.Drawing.Image gsm, radiocom, portable, rel_fixed, rel_mobile, rel_passive;
        Thread workerThread;


        public frmStationsPasswords(User user)
        {
            InitializeComponent();

            gsm = HelperFunctions.getImage(@"\\mcc-fls\Images\Tx\gsm.png");//"http://geo.gncc.ge/fr/Images/Tx/gsm.png");
            radiocom = HelperFunctions.getImage(@"\\mcc-fls\Images\Tx\repeater.png");//"http://geo.gncc.ge/fr/Images/Tx/repeater.png");
            portable = HelperFunctions.getImage(@"\\mcc-fls\Images\Tx\portable.png");//"http://geo.gncc.ge/fr/Images/Tx/portable.png");
            rel_fixed = HelperFunctions.getImage(@"\\mcc-fls\Images\Tx\relfixed.png");//"http://geo.gncc.ge/fr/Images/Tx/relfixed.png");
            rel_mobile = HelperFunctions.getImage(@"\\mcc-fls\Images\Tx\relmobile.png");//"http://geo.gncc.ge/fr/Images/Tx/relmobile.png");
            rel_passive = HelperFunctions.getImage(@"\\mcc-fls\Images\Tx\relpassive.png");//"http://geo.gncc.ge/fr/Images/Tx/relpassive.png");


            _user = user;
            if (_user.ReestritCheck) newPasswordBtn.Visibility = DevExpress.XtraBars.BarItemVisibility.Always;
            else newPasswordBtn.Visibility = DevExpress.XtraBars.BarItemVisibility.Never;
         

            // This line of code is generated by Data Source Configuration Wizard
            paroliani_da_uparolo_kompaniebiTableAdapter.Fill(officeDataSet.paroliani_da_uparolo_kompaniebi);
        }

        private void stationsExportBtn_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            string pathToImages = "http://geo.gncc.ge/fr/Images";
            if (saveFileDialog.ShowDialog() != DialogResult.OK) return;


            DataSet ds = new DataSet();

            progress progForm = new progress("მიმდინარეობს ინიციალიზაცია...");
            progForm.Show();
            progForm.Refresh();


            string connectionstring = DataBase.Properties.Settings.Default.OfficeConnectionString.ToString();
            SqlConnection northwindConnection = new SqlConnection(connectionstring);


            XmlTextWriter writer = new XmlTextWriter(saveFileDialog.FileName, System.Text.Encoding.UTF8);

            System.Text.StringBuilder output = new System.Text.StringBuilder();
            XmlWriterSettings settings = new XmlWriterSettings();
            settings.Encoding = System.Text.Encoding.UTF8;
            settings.Indent = true;
            settings.ConformanceLevel = ConformanceLevel.Auto;
            settings.OmitXmlDeclaration = false;


            writer.WriteStartDocument(true);
            writer.WriteStartElement("kml");
            writer.WriteStartElement("Document");

            /*
                int[] selRows = ((Grid.GridView)gridControl.MainView).GetSelectedRows();
DataRowView selRow = (DataRowView)(((Grid.GridView)gridControl.MainView).GetRow(selRows[0])); */

            for (int k = 0; k < gridView1.SelectedRowsCount; k++)
            {
                //MessageBox.Show(gridEX1.SelectedItems[k].GetRow().Cells["id"].Value.ToString());
                string strSQL = "select id, Comp_Name from fls_company_info where id=" + gridView1.GetRowCellValue(gridView1.GetSelectedRows()[k], colid).ToString();
                SqlCommand cmd = new SqlCommand(strSQL, northwindConnection);
                SqlDataAdapter da = new SqlDataAdapter(cmd);
                da.Fill(ds);

                string compania = gridView1.GetRowCellValue(gridView1.GetSelectedRows()[k], colid).ToString();// gridEX1.GetValue("id").ToString();

                //--------------zapisivaem imya kompanii -------------------------
                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", ds.Tables[0].Rows[0]["Comp_Name"].ToString());
                writer.WriteElementString("open", "0");
                ds.Clear();
                //----------------------zapisano---------------------------------


                //___________________________________________________________________________________________ Portable/Mobile ____________________________________________
                strSQL = "select * from st_portable where comp_id=" + compania;
                cmd = new SqlCommand(strSQL, northwindConnection);
                da = new SqlDataAdapter(cmd);
                da.Fill(ds);

                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", "Portable/Mobile");
                writer.WriteElementString("open", "1");
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    writer.WriteStartElement("Placemark");

                    writer.WriteElementString("name", ds.Tables[0].Rows[i]["function_model"].ToString());
                    //writer.WriteElementString("description", st.Name);
                    writer.WriteStartElement("LookAt");
                    writer.WriteElementString("longitude", ds.Tables[0].Rows[i]["lon"].ToString());
                    writer.WriteElementString("latitude", ds.Tables[0].Rows[i]["lat"].ToString());
                    writer.WriteElementString("range", "27000");
                    writer.WriteElementString("tilt", "0");
                    writer.WriteElementString("heading", "0");
                    writer.WriteEndElement();

                    writer.WriteElementString("styleUrl", "root://styleMaps#default+nicon=0x307+hicon=0x317");
                    writer.WriteStartElement("Style");
                    writer.WriteStartElement("IconStyle");
                    writer.WriteStartElement("Icon");
                    writer.WriteElementString("href", pathToImages + "/Tx/portable.png");
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteEndElement();

                    writer.WriteStartElement("Point");
                    writer.WriteElementString("coordinates", ds.Tables[0].Rows[i]["lon"].ToString() + "," + ds.Tables[0].Rows[i]["lat"].ToString());
                    writer.WriteEndElement();



                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
                ds.Clear();

                //___________________________________________________________________________________________ Base/Repeater ____________________________________________
                strSQL = "select * from st_radiocom where comp_id=" + compania;
                cmd = new SqlCommand(strSQL, northwindConnection);
                da = new SqlDataAdapter(cmd);
                da.Fill(ds);

                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", "Base/Repeater");
                writer.WriteElementString("open", "1");
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    writer.WriteStartElement("Placemark");

                    writer.WriteElementString("name", ds.Tables[0].Rows[i]["Name"].ToString());
                    //writer.WriteElementString("description", st.Name);
                    writer.WriteStartElement("LookAt");
                    writer.WriteElementString("longitude", ds.Tables[0].Rows[i]["lon"].ToString());
                    writer.WriteElementString("latitude", ds.Tables[0].Rows[i]["lat"].ToString());
                    writer.WriteElementString("range", "27000");
                    writer.WriteElementString("tilt", "0");
                    writer.WriteElementString("heading", "0");
                    writer.WriteEndElement();

                    writer.WriteElementString("styleUrl", "root://styleMaps#default+nicon=0x307+hicon=0x317");
                    writer.WriteStartElement("Style");
                    writer.WriteStartElement("IconStyle");
                    writer.WriteStartElement("Icon");
                    writer.WriteElementString("href", pathToImages + "/Tx/repeater.png");
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteEndElement();

                    writer.WriteStartElement("Point");
                    writer.WriteElementString("coordinates", ds.Tables[0].Rows[i]["lon"].ToString() + "," + ds.Tables[0].Rows[i]["lat"].ToString());
                    writer.WriteEndElement();



                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
                ds.Clear();

                //___________________________________________________________________________________________ Broadcasting ____________________________________________
                strSQL = "select * from st_broadcasting where comp_id=" + compania;
                cmd = new SqlCommand(strSQL, northwindConnection);
                da = new SqlDataAdapter(cmd);
                da.Fill(ds);


                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", "Broadcasting");
                writer.WriteElementString("open", "1");
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    writer.WriteStartElement("Placemark");

                    writer.WriteElementString("name", ds.Tables[0].Rows[i]["Name"].ToString());
                    //writer.WriteElementString("description", st.Name);
                    writer.WriteStartElement("LookAt");
                    writer.WriteElementString("longitude", ds.Tables[0].Rows[i]["lon"].ToString());
                    writer.WriteElementString("latitude", ds.Tables[0].Rows[i]["lat"].ToString());
                    writer.WriteElementString("range", "27000");
                    writer.WriteElementString("tilt", "0");
                    writer.WriteElementString("heading", "0");
                    writer.WriteEndElement();

                    writer.WriteElementString("styleUrl", "root://styleMaps#default+nicon=0x307+hicon=0x317");
                    writer.WriteStartElement("Style");
                    writer.WriteStartElement("IconStyle");
                    writer.WriteStartElement("Icon");
                    writer.WriteElementString("href", pathToImages + "/Tx/broadcasting.png");
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteEndElement();

                    writer.WriteStartElement("Point");
                    writer.WriteElementString("coordinates", ds.Tables[0].Rows[i]["lon"].ToString() + "," + ds.Tables[0].Rows[i]["lat"].ToString());
                    writer.WriteEndElement();



                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
                ds.Clear();

                //___________________________________________________________________________________________ GSM ____________________________________________

                strSQL = "select * from st_gsm where comp_id=" + compania;
                cmd = new SqlCommand(strSQL, northwindConnection);
                da = new SqlDataAdapter(cmd);
                da.Fill(ds);

                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", "Cell");
                writer.WriteElementString("open", "1");
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    writer.WriteStartElement("Placemark");

                    writer.WriteElementString("name", ds.Tables[0].Rows[i]["Name"].ToString());
                    //writer.WriteElementString("description", st.Name);
                    writer.WriteStartElement("LookAt");
                    writer.WriteElementString("longitude", ds.Tables[0].Rows[i]["lon"].ToString());
                    writer.WriteElementString("latitude", ds.Tables[0].Rows[i]["lat"].ToString());
                    writer.WriteElementString("range", "27000");
                    writer.WriteElementString("tilt", "0");
                    writer.WriteElementString("heading", "0");
                    writer.WriteEndElement();

                    writer.WriteElementString("styleUrl", "root://styleMaps#default+nicon=0x307+hicon=0x317");
                    writer.WriteStartElement("Style");
                    writer.WriteStartElement("IconStyle");
                    writer.WriteStartElement("Icon");
                    writer.WriteElementString("href", pathToImages + "/Tx/gsm.png");
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteEndElement();

                    writer.WriteStartElement("Point");
                    writer.WriteElementString("coordinates", ds.Tables[0].Rows[i]["lon"].ToString() + "," + ds.Tables[0].Rows[i]["lat"].ToString());
                    writer.WriteEndElement();



                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
                ds.Clear();

                //___________________________________________________________________________________________ Radiolink ____________________________________________
                strSQL = "select * from st_rel_fixed where comp_id=" + compania;
                cmd = new SqlCommand(strSQL, northwindConnection);
                da = new SqlDataAdapter(cmd);
                da.Fill(ds);

                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", "Radio Link");
                writer.WriteElementString("open", "1");
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    writer.WriteStartElement("Placemark");

                    writer.WriteElementString("name", ds.Tables[0].Rows[i]["Name"].ToString());

                    writer.WriteStartElement("description");
                    writer.WriteString("<table border=1 cellpadding=0 cellspacing=0 padding=1><tr><td bgcolor=\"#FF9900\">id: " + ds.Tables[0].Rows[i]["id"].ToString() + "</td><td>Name: " + ds.Tables[0].Rows[i]["Name"].ToString() + "</td></tr></table>");
                    writer.WriteEndElement();

                    writer.WriteStartElement("LookAt");
                    writer.WriteElementString("longitude", ds.Tables[0].Rows[i]["lon"].ToString());
                    writer.WriteElementString("latitude", ds.Tables[0].Rows[i]["lat"].ToString());
                    writer.WriteElementString("range", "27000");
                    writer.WriteElementString("tilt", "0");
                    writer.WriteElementString("heading", "0");
                    writer.WriteEndElement();

                    writer.WriteElementString("styleUrl", "root://styleMaps#default+nicon=0x307+hicon=0x317");
                    writer.WriteStartElement("Style");
                    writer.WriteStartElement("IconStyle");
                    writer.WriteStartElement("Icon");
                    writer.WriteElementString("href", pathToImages + "/Tx/relfixed.png");
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteEndElement();

                    writer.WriteStartElement("Point");
                    writer.WriteElementString("coordinates", ds.Tables[0].Rows[i]["lon"].ToString() + "," + ds.Tables[0].Rows[i]["lat"].ToString());
                    writer.WriteEndElement();



                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
                ds.Clear();
                //____________________________________________________________________  L I N K S _________________________________________________________________________________
                strSQL = "select * from fls_rel_link where A_fixed in (select id from st_rel_fixed where comp_id=" + compania + ")" +
                    " and B_fixed in (select id from st_rel_fixed where comp_id=" + compania + ")";
                cmd = new SqlCommand(strSQL, northwindConnection);
                da = new SqlDataAdapter(cmd);
                da.Fill(ds);

                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", "__Radio Links__");
                writer.WriteElementString("open", "0");
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    writer.WriteStartElement("Placemark");
                    writer.WriteStartElement("Style");
                    writer.WriteStartElement("LineStyle");
                    writer.WriteElementString("color", "7f00ffff");
                    writer.WriteElementString("width", "2");
                    writer.WriteEndElement();
                    writer.WriteEndElement();


                    writer.WriteStartElement("LineString");
                    writer.WriteElementString("tesselate", "1");
                    writer.WriteElementString("altitudeMode", "clampedToGround");
                    writer.WriteStartElement("coordinates");
                    writer.WriteString(ds.Tables[0].Rows[i]["A_lon"].ToString() + "," + ds.Tables[0].Rows[i]["A_lat"].ToString() + ",1 ");
                    writer.WriteString(ds.Tables[0].Rows[i]["B_lon"].ToString() + "," + ds.Tables[0].Rows[i]["B_lat"].ToString() + ",1 ");
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
                ds.Clear();
                //_____________________________________________________________________________________________________________________________________________________


                //------------folder kompanii--------------
                writer.WriteEndElement();
                ds.Clear();
                //---------------zakonchen-----------------

            }
            writer.WriteEndElement();
            writer.WriteEndElement();
            writer.WriteEndDocument();
            writer.Flush();

            /*
            string path = "sadgurebi.kml";
            IsolatedStorageFile iso = IsolatedStorageFile.GetUserStoreForApplication();
            using (IsolatedStorageFileStream isoStream = new IsolatedStorageFileStream(path, System.IO.FileMode.Create, iso))
            {
                using (StreamWriter wr = new StreamWriter(isoStream))
                {
                    wr.Write(output.ToString());
                }
            }


            IsolatedStorageFile isoStore = IsolatedStorageFile.GetUserStoreForApplication();
            using (Stream reader = new IsolatedStorageFileStream(path, FileMode.Open, isoStore))
            {
                SaveFileDialog savefile = new SaveFileDialog();
                savefile.Filter = "Google Earth file (*.kml)|*.kml";
                if (savefile.ShowDialog() == true)
                {
                    using (Stream wr = savefile.OpenFile())
                    {
                        Helpers.WriteFileBytes(reader, wr);
                    }
                }
            }*/





            writer.Close();

            progForm.Close();
        }

        private void exportByCitiesItem_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            exportByCities();
        }


        private void exportByCities()
        {
            if (saveFileDialog.ShowDialog() != DialogResult.OK) return;
            XmlTextWriter writer = new XmlTextWriter(saveFileDialog.FileName, System.Text.Encoding.UTF8);

            DataSet ds = new DataSet();

            progress progForm = new progress("მიმდინარეობს ინიციალიზაცია...");
            progForm.Show();
            progForm.Refresh();


            string connectionstring = DataBase.Properties.Settings.Default.OfficeConnectionString.ToString();
            SqlConnection northwindConnection = new SqlConnection(connectionstring);
            string strSQL =
"SELECT     _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, Channels.CH + '.png' AS img, Zone_City_1.city, Zone_City_1.lat,  " +
                      "Zone_City_1.lon, CAST(Channels.CH AS nvarchar(5)) AS CH, _ReestrFrLic.Freq, _ReestrFrLic.remark " +
"FROM         (SELECT     fls_COMPANY_INFO.tax_id, fls_COMPANY_INFO.Comp_Name, fls_LICENCE_INFO.LICENCE, fls_LICENCE_FREQ.FREQ,  " +
"                                              fls_LICENCE_FREQ.BandWidth, Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"                       FROM          fls_LICENCE_FREQ INNER JOIN " +
"                                              fls_LICENCE_INFO ON fls_LICENCE_FREQ.licence_id = fls_LICENCE_INFO.id INNER JOIN " +
"                                              fls_COMPANY_INFO ON fls_LICENCE_INFO.comp_id = fls_COMPANY_INFO.id INNER JOIN  " +
"                                              Zone_City ON fls_LICENCE_FREQ.city_id = Zone_City.id  " +
"                       WHERE      (fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (fls_LICENCE_FREQ.FREQ <> 0) AND (fls_LICENCE_INFO.LICENCE LIKE 'B%')  AND (fls_LICENCE_INFO.LICENCE NOT LIKE '%DB%') AND (fls_LICENCE_INFO.isCanceled <> 1)) " +
"                      AS _ReestrFrLic INNER JOIN " +
"                      Zone_City AS Zone_City_1 ON _ReestrFrLic.id = Zone_City_1.id INNER JOIN " +
"                      Channels ON _ReestrFrLic.Freq = Channels.Center " +
"ORDER BY _ReestrFrLic.city, Freq";

            SqlCommand cmd = new SqlCommand(strSQL, northwindConnection);
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            da.Fill(ds);





            writer.WriteStartDocument();
            writer.WriteStartElement("kml"); writer.WriteAttributeString("xmlns", "http://earth.google.com/kml/2.0");
            writer.WriteStartElement("Document");

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "My Places");

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "TV - ლიცენზიით გაცემული");
            writer.WriteElementString("open", "0");

            ZoneHash hs = new ZoneHash(ds);
            foreach (string myKey in hs.znhash.Keys)
            {
                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", myKey);
                writer.WriteElementString("open", "0");

                string prevFolder;
                int space;
                System.Collections.ArrayList punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    progForm.Refresh();
                    Punkt pk = (Punkt)punktebi[0];
                    prevFolder = pk.city;
                    space = 0;
                    writer.WriteStartElement("Folder");
                    writer.WriteElementString("name", pk.city);
                    writer.WriteElementString("open", "0");
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        progForm.Refresh();
                        if (prevFolder != ((Punkt)punktebi[i]).city)
                        {
                            writer.WriteEndElement();
                            prevFolder = ((Punkt)punktebi[i]).city;
                            writer.WriteStartElement("Folder");
                            writer.WriteElementString("name", ((Punkt)punktebi[i]).city);
                            writer.WriteElementString("open", "0");
                            space = 0;
                        }

                        writer.WriteStartElement("GroundOverlay");
                        writer.WriteElementString("name", ((Punkt)punktebi[i]).channel.ToString() + " - " + ((Punkt)punktebi[i]).comp_name);
                        writer.WriteElementString("description", ((Punkt)punktebi[i]).remark.ToString());
                        writer.WriteStartElement("Icon");
                        writer.WriteElementString("href", Properties.Settings.Default.ImagePath + "/TV/" + ((Punkt)punktebi[i]).img);
                        writer.WriteElementString("viewBoundScale", "0.75");
                        writer.WriteEndElement();
                        writer.WriteStartElement("LatLonBox");
                        writer.WriteElementString("north", Convert.ToString(((Punkt)punktebi[i]).lat - 0.02 * space));
                        writer.WriteElementString("south", Convert.ToString(((Punkt)punktebi[i]).lat - 0.015 - 0.02 * space));
                        writer.WriteElementString("east", ((Punkt)punktebi[i]).lon.ToString());
                        writer.WriteElementString("west", Convert.ToString(((Punkt)punktebi[i]).lon - 0.019));
                        writer.WriteEndElement();
                        writer.WriteEndElement();
                        space++;
                    }
                    writer.WriteEndElement();
                }

                writer.WriteEndElement();
            }
            writer.WriteEndElement();


            //----------------------------------------------------------------------------------------------------------
            strSQL =
"SELECT     _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, Channels.CH + '.png' AS img, Zone_City_1.city, Zone_City_1.lat,  " +
                      "Zone_City_1.lon, CAST(Channels.CH AS nvarchar(5)) AS CH, _ReestrFrLic.Freq, _ReestrFrLic.remark " +
"FROM         (SELECT     fls_COMPANY_INFO.tax_id, fls_COMPANY_INFO.Comp_Name, fls_LICENCE_INFO.LICENCE, fls_LICENCE_FREQ.FREQ,  " +
"                                              fls_LICENCE_FREQ.BandWidth, Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"                       FROM          fls_LICENCE_FREQ INNER JOIN " +
"                                              fls_LICENCE_INFO ON fls_LICENCE_FREQ.licence_id = fls_LICENCE_INFO.id INNER JOIN " +
"                                              fls_COMPANY_INFO ON fls_LICENCE_INFO.comp_id = fls_COMPANY_INFO.id INNER JOIN  " +
"                                              Zone_City ON fls_LICENCE_FREQ.city_id = Zone_City.id  " +
"                       WHERE      (fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (fls_LICENCE_FREQ.FREQ <> 0) AND (fls_LICENCE_INFO.LICENCE LIKE '_B%') AND (fls_LICENCE_INFO.LICENCE NOT LIKE '%DB%') AND (fls_LICENCE_INFO.isCanceled <> 1)) " +
"                      AS _ReestrFrLic INNER JOIN " +
"                      Zone_City AS Zone_City_1 ON _ReestrFrLic.id = Zone_City_1.id INNER JOIN " +
"                      Channels ON _ReestrFrLic.Freq = Channels.Center " +
"ORDER BY _ReestrFrLic.city, Freq";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "TV - თავისუფალი");
            writer.WriteElementString("open", "0");


            hs = new ZoneHash(ds);
            foreach (string myKey in hs.znhash.Keys)
            {
                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", myKey);
                writer.WriteElementString("open", "0");

                string prevFolder;
                int space;
                System.Collections.ArrayList punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    progForm.Refresh();
                    Punkt pk = (Punkt)punktebi[0];
                    prevFolder = pk.city;
                    space = 0;
                    writer.WriteStartElement("Folder");
                    writer.WriteElementString("name", pk.city);
                    writer.WriteElementString("open", "0");
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        progForm.Refresh();
                        if (prevFolder != ((Punkt)punktebi[i]).city)
                        {
                            writer.WriteEndElement();
                            prevFolder = ((Punkt)punktebi[i]).city;
                            writer.WriteStartElement("Folder");
                            writer.WriteElementString("name", ((Punkt)punktebi[i]).city);
                            writer.WriteElementString("open", "0");
                            space = 0;
                        }


                        writer.WriteStartElement("GroundOverlay");
                        writer.WriteElementString("name", ((Punkt)punktebi[i]).channel.ToString() + " - " + ((Punkt)punktebi[i]).comp_name);
                        writer.WriteElementString("description", ((Punkt)punktebi[i]).remark.ToString());
                        writer.WriteStartElement("Icon");
                        writer.WriteElementString("href", Properties.Settings.Default.ImagePath + "/TV-FREE/" + ((Punkt)punktebi[i]).img);
                        writer.WriteElementString("viewBoundScale", "0.75");
                        writer.WriteEndElement();
                        writer.WriteStartElement("LatLonBox");
                        writer.WriteElementString("north", Convert.ToString(((Punkt)punktebi[i]).lat - 0.02 * space));
                        writer.WriteElementString("south", Convert.ToString(((Punkt)punktebi[i]).lat - 0.015 - 0.02 * space));
                        writer.WriteElementString("east", Convert.ToString(((Punkt)punktebi[i]).lon + 0.05));
                        writer.WriteElementString("west", Convert.ToString(((Punkt)punktebi[i]).lon - 0.019 + 0.05));
                        writer.WriteEndElement();
                        writer.WriteEndElement();
                        space++;
                    }
                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
            }
            writer.WriteEndElement();



            //----------------------------------------------------------------------------------------------------------
            strSQL =
"SELECT     _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, Channels.CH + '.png' AS img, Zone_City_1.city, Zone_City_1.lat,  " +
                      "Zone_City_1.lon, CAST(Channels.CH AS nvarchar(5)) AS CH, _ReestrFrLic.Freq, _ReestrFrLic.remark " +
"FROM         (SELECT     fls_COMPANY_INFO.tax_id, fls_COMPANY_INFO.Comp_Name, fls_LICENCE_INFO.LICENCE, fls_LICENCE_FREQ.FREQ,  " +
"                                              fls_LICENCE_FREQ.BandWidth, Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"                       FROM          fls_LICENCE_FREQ INNER JOIN " +
"                                              fls_LICENCE_INFO ON fls_LICENCE_FREQ.licence_id = fls_LICENCE_INFO.id INNER JOIN " +
"                                              fls_COMPANY_INFO ON fls_LICENCE_INFO.comp_id = fls_COMPANY_INFO.id INNER JOIN  " +
"                                              Zone_City ON fls_LICENCE_FREQ.city_id = Zone_City.id  " +
"                       WHERE      (fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (fls_LICENCE_FREQ.FREQ <> 0) AND (fls_LICENCE_INFO.LICENCE LIKE '__B%')  AND (fls_LICENCE_INFO.LICENCE NOT LIKE '%DB%') AND (fls_LICENCE_INFO.isCanceled <> 1)) " +
"                      AS _ReestrFrLic INNER JOIN " +
"                      Zone_City AS Zone_City_1 ON _ReestrFrLic.id = Zone_City_1.id INNER JOIN " +
"                      Channels ON _ReestrFrLic.Freq = Channels.Center " +
"ORDER BY _ReestrFrLic.city, Freq";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "TV - მოსაზღვრო/უკანონო");
            writer.WriteElementString("open", "0");

            hs = new ZoneHash(ds);
            foreach (string myKey in hs.znhash.Keys)
            {
                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", myKey);
                writer.WriteElementString("open", "0");

                string prevFolder;
                int space;
                System.Collections.ArrayList punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    progForm.Refresh();
                    Punkt pk = (Punkt)punktebi[0];
                    prevFolder = pk.city;
                    space = 0;
                    writer.WriteStartElement("Folder");
                    writer.WriteElementString("name", pk.city);
                    writer.WriteElementString("open", "0");
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        progForm.Refresh();
                        if (prevFolder != ((Punkt)punktebi[i]).city)
                        {
                            writer.WriteEndElement();
                            prevFolder = ((Punkt)punktebi[i]).city;
                            writer.WriteStartElement("Folder");
                            writer.WriteElementString("name", ((Punkt)punktebi[i]).city);
                            writer.WriteElementString("open", "0");
                            space = 0;
                        }

                        writer.WriteStartElement("GroundOverlay");
                        writer.WriteElementString("name", ((Punkt)punktebi[i]).channel.ToString() + " - " + ((Punkt)punktebi[i]).comp_name);
                        writer.WriteElementString("description", ((Punkt)punktebi[i]).remark.ToString());
                        writer.WriteStartElement("Icon");
                        writer.WriteElementString("href", Properties.Settings.Default.ImagePath + "/TV-BORD/" + ((Punkt)punktebi[i]).img.ToString());
                        writer.WriteElementString("viewBoundScale", "0.75");
                        writer.WriteEndElement();
                        writer.WriteStartElement("LatLonBox");
                        writer.WriteElementString("north", Convert.ToString(((Punkt)punktebi[i]).lat + 0.015 + 0.02 * space + 0.005));
                        writer.WriteElementString("south", Convert.ToString(((Punkt)punktebi[i]).lat + 0.02 * space + 0.005));
                        writer.WriteElementString("east", ((Punkt)punktebi[i]).lon.ToString());
                        writer.WriteElementString("west", Convert.ToString(((Punkt)punktebi[i]).lon - 0.019));
                        writer.WriteEndElement();
                        writer.WriteEndElement();
                        space++;
                    }
                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
            }
            writer.WriteEndElement();

            //-----------DTV Licenced-----------------------------------------------------------------------------------------------
            strSQL =
"SELECT     _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, Channels.CH + '.jpg' AS img, Zone_City_1.city, Zone_City_1.lat,  " +
"Zone_City_1.lon, CAST(Channels.CH AS nvarchar(5)) AS CH, _ReestrFrLic.Freq, _ReestrFrLic.remark " +
"FROM         (SELECT     fls_COMPANY_INFO.tax_id, fls_COMPANY_INFO.Comp_Name, fls_LICENCE_INFO.LICENCE, fls_LICENCE_FREQ.FREQ,  " +
"                                              fls_LICENCE_FREQ.BandWidth, Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"                       FROM          fls_LICENCE_FREQ INNER JOIN " +
"                                              fls_LICENCE_INFO ON fls_LICENCE_FREQ.licence_id = fls_LICENCE_INFO.id INNER JOIN " +
"                                              fls_COMPANY_INFO ON fls_LICENCE_INFO.comp_id = fls_COMPANY_INFO.id INNER JOIN  " +
"                                              Zone_City ON fls_LICENCE_FREQ.city_id = Zone_City.id  " +
"                       WHERE      (fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (fls_LICENCE_FREQ.FREQ <> 0) AND (fls_LICENCE_INFO.LICENCE LIKE 'DB%') AND (fls_LICENCE_INFO.isCanceled <> 1)) " +
"                      AS _ReestrFrLic INNER JOIN " +
"                      Zone_City AS Zone_City_1 ON _ReestrFrLic.id = Zone_City_1.id INNER JOIN " +
"                      Channels ON _ReestrFrLic.Freq = Channels.Center " +
"ORDER BY _ReestrFrLic.city, Freq";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "DTV - ლიცენზიით გაცემული");
            writer.WriteElementString("open", "0");


            hs = new ZoneHash(ds);
            foreach (string myKey in hs.znhash.Keys)
            {
                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", myKey);
                writer.WriteElementString("open", "0");

                string prevFolder;
                int space;
                System.Collections.ArrayList punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    progForm.Refresh();
                    Punkt pk = (Punkt)punktebi[0];
                    prevFolder = pk.city;
                    space = 0;
                    writer.WriteStartElement("Folder");
                    writer.WriteElementString("name", pk.city);
                    writer.WriteElementString("open", "0");
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        progForm.Refresh();
                        if (prevFolder != ((Punkt)punktebi[i]).city)
                        {
                            writer.WriteEndElement();
                            prevFolder = ((Punkt)punktebi[i]).city;
                            writer.WriteStartElement("Folder");
                            writer.WriteElementString("name", ((Punkt)punktebi[i]).city);
                            writer.WriteElementString("open", "0");
                            space = 0;
                        }


                        writer.WriteStartElement("GroundOverlay");
                        writer.WriteElementString("name", ((Punkt)punktebi[i]).channel.ToString() + " - " + ((Punkt)punktebi[i]).comp_name);
                        writer.WriteElementString("description", ((Punkt)punktebi[i]).remark.ToString());
                        writer.WriteStartElement("Icon");
                        writer.WriteElementString("href", Properties.Settings.Default.ImagePath + "/TV/" + ((Punkt)punktebi[i]).img);
                        writer.WriteElementString("viewBoundScale", "0.75");
                        writer.WriteEndElement();
                        writer.WriteStartElement("LatLonBox");

                        writer.WriteElementString("north", Convert.ToString(((Punkt)punktebi[i]).lat - 0.02 * space));
                        writer.WriteElementString("south", Convert.ToString(((Punkt)punktebi[i]).lat - 0.015 - 0.02 * space));
                        writer.WriteElementString("east", ((Punkt)punktebi[i]).lon.ToString());
                        writer.WriteElementString("west", Convert.ToString(((Punkt)punktebi[i]).lon - 0.019));
                        writer.WriteEndElement();
                        writer.WriteEndElement();
                        space++;
                    }
                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
            }
            writer.WriteEndElement();

            //-----------DTV Free-----------------------------------------------------------------------------------------------
            strSQL =
"SELECT     _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, Channels.CH + '.jpg' AS img, Zone_City_1.city, Zone_City_1.lat,  " +
"Zone_City_1.lon, CAST(Channels.CH AS nvarchar(5)) AS CH, _ReestrFrLic.Freq, _ReestrFrLic.remark " +
"FROM         (SELECT     fls_COMPANY_INFO.tax_id, fls_COMPANY_INFO.Comp_Name, fls_LICENCE_INFO.LICENCE, fls_LICENCE_FREQ.FREQ,  " +
"                                              fls_LICENCE_FREQ.BandWidth, Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"                       FROM          fls_LICENCE_FREQ INNER JOIN " +
"                                              fls_LICENCE_INFO ON fls_LICENCE_FREQ.licence_id = fls_LICENCE_INFO.id INNER JOIN " +
"                                              fls_COMPANY_INFO ON fls_LICENCE_INFO.comp_id = fls_COMPANY_INFO.id INNER JOIN  " +
"                                              Zone_City ON fls_LICENCE_FREQ.city_id = Zone_City.id  " +
"                       WHERE      (fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (fls_LICENCE_FREQ.FREQ <> 0) AND (fls_LICENCE_INFO.LICENCE LIKE '_DB%') AND (fls_LICENCE_INFO.isCanceled <> 1)) " +
"                      AS _ReestrFrLic INNER JOIN " +
"                      Zone_City AS Zone_City_1 ON _ReestrFrLic.id = Zone_City_1.id INNER JOIN " +
"                      Channels ON _ReestrFrLic.Freq = Channels.Center " +
"ORDER BY _ReestrFrLic.city, Freq";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "DTV - თავისუფალი");
            writer.WriteElementString("open", "0");


            hs = new ZoneHash(ds);
            foreach (string myKey in hs.znhash.Keys)
            {
                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", myKey);
                writer.WriteElementString("open", "0");

                string prevFolder;
                int space;
                System.Collections.ArrayList punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    progForm.Refresh();
                    Punkt pk = (Punkt)punktebi[0];
                    prevFolder = pk.city;
                    space = 0;
                    writer.WriteStartElement("Folder");
                    writer.WriteElementString("name", pk.city);
                    writer.WriteElementString("open", "0");
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        progForm.Refresh();
                        if (prevFolder != ((Punkt)punktebi[i]).city)
                        {
                            writer.WriteEndElement();
                            prevFolder = ((Punkt)punktebi[i]).city;
                            writer.WriteStartElement("Folder");
                            writer.WriteElementString("name", ((Punkt)punktebi[i]).city);
                            writer.WriteElementString("open", "0");
                            space = 0;
                        }


                        writer.WriteStartElement("GroundOverlay");
                        writer.WriteElementString("name", ((Punkt)punktebi[i]).channel.ToString() + " - " + ((Punkt)punktebi[i]).comp_name);
                        writer.WriteElementString("description", ((Punkt)punktebi[i]).remark.ToString());
                        writer.WriteStartElement("Icon");
                        writer.WriteElementString("href", Properties.Settings.Default.ImagePath + "/TV-FREE/" + ((Punkt)punktebi[i]).img);
                        writer.WriteElementString("viewBoundScale", "0.75");
                        writer.WriteEndElement();
                        writer.WriteStartElement("LatLonBox");
                        writer.WriteElementString("north", Convert.ToString(((Punkt)punktebi[i]).lat - 0.02 * space));
                        writer.WriteElementString("south", Convert.ToString(((Punkt)punktebi[i]).lat - 0.015 - 0.02 * space));
                        writer.WriteElementString("east", Convert.ToString(((Punkt)punktebi[i]).lon + 0.05));
                        writer.WriteElementString("west", Convert.ToString(((Punkt)punktebi[i]).lon - 0.019 + 0.05));
                        writer.WriteEndElement();
                        writer.WriteEndElement();
                        space++;
                    }
                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
            }
            writer.WriteEndElement();

            //-----------DTV BORD-----------------------------------------------------------------------------------------------
            strSQL =
"SELECT     _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, Channels.CH + '.jpg' AS img, Zone_City_1.city, Zone_City_1.lat,  " +
"Zone_City_1.lon, CAST(Channels.CH AS nvarchar(5)) AS CH, _ReestrFrLic.Freq, _ReestrFrLic.remark " +
"FROM         (SELECT     fls_COMPANY_INFO.tax_id, fls_COMPANY_INFO.Comp_Name, fls_LICENCE_INFO.LICENCE, fls_LICENCE_FREQ.FREQ,  " +
"                                              fls_LICENCE_FREQ.BandWidth, Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"                       FROM          fls_LICENCE_FREQ INNER JOIN " +
"                                              fls_LICENCE_INFO ON fls_LICENCE_FREQ.licence_id = fls_LICENCE_INFO.id INNER JOIN " +
"                                              fls_COMPANY_INFO ON fls_LICENCE_INFO.comp_id = fls_COMPANY_INFO.id INNER JOIN  " +
"                                              Zone_City ON fls_LICENCE_FREQ.city_id = Zone_City.id  " +
"                       WHERE      (fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (fls_LICENCE_FREQ.FREQ <> 0) AND (fls_LICENCE_INFO.LICENCE LIKE '__DB%') AND (fls_LICENCE_INFO.isCanceled <> 1)) " +
"                      AS _ReestrFrLic INNER JOIN " +
"                      Zone_City AS Zone_City_1 ON _ReestrFrLic.id = Zone_City_1.id INNER JOIN " +
"                      Channels ON _ReestrFrLic.Freq = Channels.Center " +
"ORDER BY _ReestrFrLic.city, Freq";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "DTV - მოსაზღვრო/უკანონო");
            writer.WriteElementString("open", "0");


            hs = new ZoneHash(ds);
            foreach (string myKey in hs.znhash.Keys)
            {
                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", myKey);
                writer.WriteElementString("open", "0");

                string prevFolder;
                int space;
                System.Collections.ArrayList punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    progForm.Refresh();
                    Punkt pk = (Punkt)punktebi[0];
                    prevFolder = pk.city;
                    space = 0;
                    writer.WriteStartElement("Folder");
                    writer.WriteElementString("name", pk.city);
                    writer.WriteElementString("open", "0");
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        progForm.Refresh();
                        if (prevFolder != ((Punkt)punktebi[i]).city)
                        {
                            writer.WriteEndElement();
                            prevFolder = ((Punkt)punktebi[i]).city;
                            writer.WriteStartElement("Folder");
                            writer.WriteElementString("name", ((Punkt)punktebi[i]).city);
                            writer.WriteElementString("open", "0");
                            space = 0;
                        }


                        writer.WriteStartElement("GroundOverlay");
                        writer.WriteElementString("name", ((Punkt)punktebi[i]).channel.ToString() + " - " + ((Punkt)punktebi[i]).comp_name);
                        writer.WriteElementString("description", ((Punkt)punktebi[i]).remark.ToString());
                        writer.WriteStartElement("Icon");
                        writer.WriteElementString("href", Properties.Settings.Default.ImagePath + "/TV-BORD/" + ((Punkt)punktebi[i]).img);
                        writer.WriteElementString("viewBoundScale", "0.75");
                        writer.WriteEndElement();
                        writer.WriteStartElement("LatLonBox");
                        writer.WriteElementString("north", Convert.ToString(((Punkt)punktebi[i]).lat + 0.015 + 0.02 * space + 0.005));
                        writer.WriteElementString("south", Convert.ToString(((Punkt)punktebi[i]).lat + 0.02 * space + 0.005));
                        writer.WriteElementString("east", ((Punkt)punktebi[i]).lon.ToString());
                        writer.WriteElementString("west", Convert.ToString(((Punkt)punktebi[i]).lon - 0.019));
                        writer.WriteEndElement();
                        writer.WriteEndElement();
                        space++;
                    }
                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
            writer.WriteEndElement();

            //----------------------------------------------------------- LINKEBIS CHATSERA ------------------------------------------
            ds = new DataSet();
            connectionstring = DataBase.Properties.Settings.Default.OfficeConnectionString.ToString();
            northwindConnection = new SqlConnection(connectionstring);
            strSQL = "select * from Zone";
            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            da.Fill(ds);

            System.Collections.Hashtable znhash = new System.Collections.Hashtable();
            for (int k = 0; k < ds.Tables[0].Rows.Count; k++)
            {
                string str = ds.Tables[0].Rows[k]["Coords"].ToString();
                string[] s = str.Split(new string[] { ")(" }, StringSplitOptions.RemoveEmptyEntries);

                Point[] pt = new Point[s.GetLength(0)];
                for (int j = 0; j < s.GetLength(0); j++)
                {
                    s[j] = s[j].Replace("(", "");
                    s[j] = s[j].Replace(")", "");
                    string[] tmp = s[j].Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries);
                    pt[j] = new Point(Convert.ToInt32(Convert.ToDouble(tmp[0]) * 10000), Convert.ToInt32(Convert.ToDouble(tmp[1]) * 10000));
                }

                znhash.Add(ds.Tables[0].Rows[k]["Name"].ToString(), pt);
            }

            //sort values
            System.Collections.ArrayList sortedList = new System.Collections.ArrayList();
            sortedList.AddRange(znhash.Keys);
            sortedList.Sort();
            //values sorted


            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "Regions");
            writer.WriteElementString("open", "0");

            string lastfolder = "";
            string currfolder = "";
            foreach (string myKey in sortedList)
            {
                if (myKey.Contains("ARM_")) currfolder = "ARM";
                else if (myKey.Contains("AZE_")) currfolder = "AZE";
                else if (myKey.Contains("GEO_")) currfolder = "GEO";
                else if (myKey.Contains("RUS_")) currfolder = "RUS";
                else if (myKey.Contains("TUR_")) currfolder = "TUR";
                else currfolder = "";

                if (currfolder != lastfolder)
                {
                    if (lastfolder != "") writer.WriteEndElement();

                    if (currfolder != "")
                    {

                        if (currfolder == "ARM")
                        {
                            writer.WriteStartElement("Folder");
                            writer.WriteElementString("name", "ARMENIA");
                            writer.WriteElementString("open", "0");
                            lastfolder = "ARM";
                        }
                        else
                            if (currfolder == "AZE")
                            {
                                writer.WriteStartElement("Folder");
                                writer.WriteElementString("name", "AZERBAIJAN");
                                writer.WriteElementString("open", "0");
                                lastfolder = "AZE";
                            }
                            else
                                if (currfolder == "GEO")
                                {
                                    writer.WriteStartElement("Folder");
                                    writer.WriteElementString("name", "GEORGIA");
                                    writer.WriteElementString("open", "0");
                                    lastfolder = "GEO";
                                }
                                else
                                    if (currfolder == "RUS")
                                    {
                                        writer.WriteStartElement("Folder");
                                        writer.WriteElementString("name", "RUSSIA");
                                        writer.WriteElementString("open", "0");
                                        lastfolder = "RUS";
                                    }
                        if (currfolder == "TUR")
                        {
                            writer.WriteStartElement("Folder");
                            writer.WriteElementString("name", "TURKEY");
                            writer.WriteElementString("open", "0");
                            lastfolder = "TUR";
                        }


                    }
                    else lastfolder = "";

                }


                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", myKey);
                writer.WriteElementString("open", "0");


                Point[] pt = (Point[])znhash[myKey];
                for (int i = 0; i < pt.Length; i++)
                {
                    writer.WriteStartElement("Placemark");
                    writer.WriteStartElement("Style");
                    writer.WriteStartElement("LineStyle");
                    writer.WriteElementString("color", "7f00ffff");
                    writer.WriteElementString("width", "2");
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteStartElement("LineString");
                    writer.WriteElementString("tessellate", "1");
                    writer.WriteElementString("altitudeMode", "ClampedToGround");
                    writer.WriteStartElement("coordinates");
                    if (i == pt.Length - 1)
                    {
                        writer.WriteString((double)pt[i].X / 10000 + "," + (double)pt[i].Y / 10000 + ",1 ");
                        writer.WriteString((double)pt[0].X / 10000 + "," + (double)pt[0].Y / 10000 + ",1 ");
                    }
                    else
                    {
                        writer.WriteString((double)pt[i].X / 10000 + "," + (double)pt[i].Y / 10000 + ",1 ");
                        writer.WriteString((double)pt[i + 1].X / 10000 + "," + (double)pt[i + 1].Y / 10000 + ",1 ");
                    }
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteEndElement();

                }
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
            //----------------------------------------------------------- LINKEBIS CHATSERA ------------------------------------------

            writer.WriteEndElement();
            writer.WriteEndElement();
            writer.WriteEndDocument();
            writer.Flush();
            writer.Close();

            progForm.Close();

        }

        private void exportByChannelsItem_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            exportByChannels(false);
        }

        private void exportByChannels(bool by_comps)
        {
            if (saveFileDialog.ShowDialog() != DialogResult.OK) return;
            XmlTextWriter writer = new XmlTextWriter(saveFileDialog.FileName, System.Text.Encoding.UTF8);

            DataSet ds = new DataSet();




            string connectionstring = DataBase.Properties.Settings.Default.OfficeConnectionString.ToString();
            SqlConnection northwindConnection = new SqlConnection(connectionstring);
            string strSQL =
"SELECT     _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, Channels.CH + '.png' AS img, Zone_City_1.city, Zone_City_1.lat,  " +
                      "Zone_City_1.lon, CAST(Channels.CH AS nvarchar(5)) AS CH, _ReestrFrLic.Freq, _ReestrFrLic.remark " +
"FROM         (SELECT     fls_COMPANY_INFO.tax_id, fls_COMPANY_INFO.Comp_Name, fls_LICENCE_INFO.LICENCE, fls_LICENCE_FREQ.FREQ,  " +
"                                              fls_LICENCE_FREQ.BandWidth, Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"                       FROM          fls_LICENCE_FREQ INNER JOIN " +
"                                              fls_LICENCE_INFO ON fls_LICENCE_FREQ.licence_id = fls_LICENCE_INFO.id INNER JOIN " +
"                                              fls_COMPANY_INFO ON fls_LICENCE_INFO.comp_id = fls_COMPANY_INFO.id INNER JOIN  " +
"                                              Zone_City ON fls_LICENCE_FREQ.city_id = Zone_City.id  " +
"                       WHERE      (fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (fls_LICENCE_FREQ.FREQ <> 0) AND (fls_LICENCE_INFO.LICENCE LIKE 'B%')  AND (fls_LICENCE_INFO.LICENCE NOT LIKE '%DB%') AND (fls_LICENCE_INFO.isCanceled <> 1)) " +
"                      AS _ReestrFrLic INNER JOIN " +
"                      Zone_City AS Zone_City_1 ON _ReestrFrLic.id = Zone_City_1.id INNER JOIN " +
"                      Channels ON _ReestrFrLic.Freq = Channels.Center " +
"ORDER BY _ReestrFrLic.city, Freq";

            SqlCommand cmd = new SqlCommand(strSQL, northwindConnection);
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            da.Fill(ds);


            writer.WriteStartDocument();
            writer.WriteStartElement("kml"); writer.WriteAttributeString("xmlns", "http://earth.google.com/kml/2.0");
            writer.WriteStartElement("Document");

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "My Places");

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "TV - ლიცენზიით გაცემული");
            writer.WriteElementString("open", "0");


            ZoneHash hs = new ZoneHash(ds);
            System.Collections.ArrayList punktebi = new System.Collections.ArrayList();
            List<Punkt> punkts = new List<Punkt>();
            foreach (string myKey in hs.znhash.Keys)
            {
                punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    string PrevFolder = "";
                    int space = 0;
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        if (((Punkt)punktebi[i]).city != PrevFolder) space = 0;

                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).n = Convert.ToDouble(((Punkt)punktebi[i]).lat) - 0.02 * space;
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).s = Convert.ToDouble(((Punkt)punktebi[i]).lat - 0.015 - 0.02 * space);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).e = Convert.ToDouble(((Punkt)punktebi[i]).lon);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).w = Convert.ToDouble(((Punkt)punktebi[i]).lon - 0.019);
                        punkts.Add((Punkt)punktebi[i]);
                        PrevFolder = ((Punkt)punktebi[i]).city;
                        space++;
                    }
                }
            }

            PlotPunkts(writer, punkts, "/TV/", by_comps);



            //----------------------------------------------------------------------------------------------------------
            strSQL =
"SELECT     _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, Channels.CH + '.png' AS img, Zone_City_1.city, Zone_City_1.lat,  " +
                      "Zone_City_1.lon, CAST(Channels.CH AS nvarchar(5)) AS CH, _ReestrFrLic.Freq, _ReestrFrLic.remark " +
"FROM         (SELECT     fls_COMPANY_INFO.tax_id, fls_COMPANY_INFO.Comp_Name, fls_LICENCE_INFO.LICENCE, fls_LICENCE_FREQ.FREQ,  " +
"                                              fls_LICENCE_FREQ.BandWidth, Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"                       FROM          fls_LICENCE_FREQ INNER JOIN " +
"                                              fls_LICENCE_INFO ON fls_LICENCE_FREQ.licence_id = fls_LICENCE_INFO.id INNER JOIN " +
"                                              fls_COMPANY_INFO ON fls_LICENCE_INFO.comp_id = fls_COMPANY_INFO.id INNER JOIN  " +
"                                              Zone_City ON fls_LICENCE_FREQ.city_id = Zone_City.id  " +
"                       WHERE      (fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (fls_LICENCE_FREQ.FREQ <> 0) AND (fls_LICENCE_INFO.LICENCE LIKE '_B%') AND (fls_LICENCE_INFO.LICENCE NOT LIKE '%DB%') AND (fls_LICENCE_INFO.isCanceled <> 1)) " +
"                      AS _ReestrFrLic INNER JOIN " +
"                      Zone_City AS Zone_City_1 ON _ReestrFrLic.id = Zone_City_1.id INNER JOIN " +
"                      Channels ON _ReestrFrLic.Freq = Channels.Center " +
"ORDER BY _ReestrFrLic.city, Freq";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "TV - თავისუფალი");
            writer.WriteElementString("open", "0");


            hs = new ZoneHash(ds);
            punktebi = new System.Collections.ArrayList();
            punkts = new List<Punkt>();
            foreach (string myKey in hs.znhash.Keys)
            {
                punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    string PrevFolder = "";
                    int space = 0;
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        if (((Punkt)punktebi[i]).city != PrevFolder) space = 0;

                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).n = Convert.ToDouble(((Punkt)punktebi[i]).lat - 0.02 * space);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).s = Convert.ToDouble(((Punkt)punktebi[i]).lat - 0.015 - 0.02 * space);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).e = Convert.ToDouble(((Punkt)punktebi[i]).lon + 0.05);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).w = Convert.ToDouble(((Punkt)punktebi[i]).lon - 0.019 + 0.05);
                        punkts.Add((Punkt)punktebi[i]);
                        PrevFolder = ((Punkt)punktebi[i]).city;
                        space++;
                    }

                }
            }

            PlotPunkts(writer, punkts, "/TV-FREE/", by_comps);




            //----------------------------------------------------------------------------------------------------------
            strSQL =
"SELECT     _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, Channels.CH + '.png' AS img, Zone_City_1.city, Zone_City_1.lat,  " +
                      "Zone_City_1.lon, CAST(Channels.CH AS nvarchar(5)) AS CH, _ReestrFrLic.Freq, _ReestrFrLic.remark " +
"FROM         (SELECT     fls_COMPANY_INFO.tax_id, fls_COMPANY_INFO.Comp_Name, fls_LICENCE_INFO.LICENCE, fls_LICENCE_FREQ.FREQ,  " +
"                                              fls_LICENCE_FREQ.BandWidth, Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"                       FROM          fls_LICENCE_FREQ INNER JOIN " +
"                                              fls_LICENCE_INFO ON fls_LICENCE_FREQ.licence_id = fls_LICENCE_INFO.id INNER JOIN " +
"                                              fls_COMPANY_INFO ON fls_LICENCE_INFO.comp_id = fls_COMPANY_INFO.id INNER JOIN  " +
"                                              Zone_City ON fls_LICENCE_FREQ.city_id = Zone_City.id  " +
"                       WHERE      (fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (fls_LICENCE_FREQ.FREQ <> 0) AND (fls_LICENCE_INFO.LICENCE LIKE '__B%')  AND (fls_LICENCE_INFO.LICENCE NOT LIKE '%DB%') AND (fls_LICENCE_INFO.isCanceled <> 1)) " +
"                      AS _ReestrFrLic INNER JOIN " +
"                      Zone_City AS Zone_City_1 ON _ReestrFrLic.id = Zone_City_1.id INNER JOIN " +
"                      Channels ON _ReestrFrLic.Freq = Channels.Center " +
"ORDER BY _ReestrFrLic.city, Freq";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "TV - მოსაზღვრო/უკანონო");
            writer.WriteElementString("open", "0");

            hs = new ZoneHash(ds);
            punktebi = new System.Collections.ArrayList();
            punkts = new List<Punkt>();
            foreach (string myKey in hs.znhash.Keys)
            {
                punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    string PrevFolder = "";
                    int space = 0;
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        if (((Punkt)punktebi[i]).city != PrevFolder) space = 0;

                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).n = Convert.ToDouble(((Punkt)punktebi[i]).lat + 0.015 + 0.02 * space + 0.005);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).s = Convert.ToDouble(((Punkt)punktebi[i]).lat + 0.02 * space + 0.005);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).e = Convert.ToDouble(((Punkt)punktebi[i]).lon);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).w = Convert.ToDouble(((Punkt)punktebi[i]).lon - 0.019);
                        punkts.Add((Punkt)punktebi[i]);
                        PrevFolder = ((Punkt)punktebi[i]).city;
                        space++;
                    }
                }
            }

            PlotPunkts(writer, punkts, "/TV-BORD/", by_comps);


            //-----------DTV Licenced-----------------------------------------------------------------------------------------------
            strSQL =
"SELECT     _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, Channels.CH + '.jpg' AS img, Zone_City_1.city, Zone_City_1.lat,  " +
"Zone_City_1.lon, CAST(Channels.CH AS nvarchar(5)) AS CH, _ReestrFrLic.Freq, _ReestrFrLic.remark " +
"FROM         (SELECT     fls_COMPANY_INFO.tax_id, fls_COMPANY_INFO.Comp_Name, fls_LICENCE_INFO.LICENCE, fls_LICENCE_FREQ.FREQ,  " +
"                                              fls_LICENCE_FREQ.BandWidth, Zone_City.city, dbo.fls_LICENCE_FREQ.remark " +
"                       FROM          fls_LICENCE_FREQ INNER JOIN " +
"                                              fls_LICENCE_INFO ON fls_LICENCE_FREQ.licence_id = fls_LICENCE_INFO.id INNER JOIN " +
"                                              fls_COMPANY_INFO ON fls_LICENCE_INFO.comp_id = fls_COMPANY_INFO.id INNER JOIN  " +
"                                              Zone_City ON fls_LICENCE_FREQ.city_id = Zone_City.id  " +
"                       WHERE      (fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (fls_LICENCE_FREQ.FREQ <> 0) AND (fls_LICENCE_INFO.LICENCE LIKE 'DB%') AND (fls_LICENCE_INFO.isCanceled <> 1)) " +
"                      AS _ReestrFrLic INNER JOIN " +
"                      Zone_City AS Zone_City_1 ON _ReestrFrLic.city = Zone_City_1.city INNER JOIN " +
"                      Channels ON _ReestrFrLic.Freq = Channels.Center " +
"ORDER BY _ReestrFrLic.city, Freq";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "DTV - ლიცენზიით გაცემული");
            writer.WriteElementString("open", "0");

            hs = new ZoneHash(ds);
            punktebi = new System.Collections.ArrayList();
            punkts = new List<Punkt>();
            foreach (string myKey in hs.znhash.Keys)
            {
                punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    string PrevFolder = "";
                    int space = 0;
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        if (((Punkt)punktebi[i]).city != PrevFolder) space = 0;
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).n = Convert.ToDouble(((Punkt)punktebi[i]).lat) - 0.02 * space;
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).s = Convert.ToDouble(((Punkt)punktebi[i]).lat - 0.015 - 0.02 * space);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).e = Convert.ToDouble(((Punkt)punktebi[i]).lon);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).w = Convert.ToDouble(((Punkt)punktebi[i]).lon - 0.019);
                        punkts.Add((Punkt)punktebi[i]);
                        PrevFolder = ((Punkt)punktebi[i]).city;
                        space++;
                    }
                }
            }

            PlotPunkts(writer, punkts, "/TV/", by_comps);


            //-----------DTV Free-----------------------------------------------------------------------------------------------
            strSQL =
"SELECT     _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, Channels.CH + '.jpg' AS img, Zone_City_1.city, Zone_City_1.lat,  " +
"Zone_City_1.lon, CAST(Channels.CH AS nvarchar(5)) AS CH, _ReestrFrLic.Freq, _ReestrFrLic.remark " +
"FROM         (SELECT     fls_COMPANY_INFO.tax_id, fls_COMPANY_INFO.Comp_Name, fls_LICENCE_INFO.LICENCE, fls_LICENCE_FREQ.FREQ,  " +
"                                              fls_LICENCE_FREQ.BandWidth, Zone_City.city, dbo.fls_LICENCE_FREQ.remark " +
"                       FROM          fls_LICENCE_FREQ INNER JOIN " +
"                                              fls_LICENCE_INFO ON fls_LICENCE_FREQ.licence_id = fls_LICENCE_INFO.id INNER JOIN " +
"                                              fls_COMPANY_INFO ON fls_LICENCE_INFO.comp_id = fls_COMPANY_INFO.id INNER JOIN  " +
"                                              Zone_City ON fls_LICENCE_FREQ.city_id = Zone_City.id  " +
"                       WHERE      (fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (fls_LICENCE_FREQ.FREQ <> 0) AND (fls_LICENCE_INFO.LICENCE LIKE '_DB%') AND (fls_LICENCE_INFO.isCanceled <> 1)) " +
"                      AS _ReestrFrLic INNER JOIN " +
"                      Zone_City AS Zone_City_1 ON _ReestrFrLic.city = Zone_City_1.city INNER JOIN " +
"                      Channels ON _ReestrFrLic.Freq = Channels.Center " +
"ORDER BY _ReestrFrLic.city, Freq";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "DTV - თავისუფალი");
            writer.WriteElementString("open", "0");

            hs = new ZoneHash(ds);
            punktebi = new System.Collections.ArrayList();
            punkts = new List<Punkt>();
            foreach (string myKey in hs.znhash.Keys)
            {
                punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    string PrevFolder = "";
                    int space = 0;
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        if (((Punkt)punktebi[i]).city != PrevFolder) space = 0;

                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).n = Convert.ToDouble(((Punkt)punktebi[i]).lat - 0.02 * space);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).s = Convert.ToDouble(((Punkt)punktebi[i]).lat - 0.015 - 0.02 * space);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).e = Convert.ToDouble(((Punkt)punktebi[i]).lon + 0.05);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).w = Convert.ToDouble(((Punkt)punktebi[i]).lon - 0.019 + 0.05);
                        punkts.Add((Punkt)punktebi[i]);
                        PrevFolder = ((Punkt)punktebi[i]).city;
                        space++;
                    }
                }
            }

            PlotPunkts(writer, punkts, "/TV-FREE/", by_comps);


            //-----------DTV BORD-----------------------------------------------------------------------------------------------
            strSQL =
"SELECT     _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, Channels.CH + '.jpg' AS img, Zone_City_1.city, Zone_City_1.lat,  " +
"Zone_City_1.lon, CAST(Channels.CH AS nvarchar(5)) AS CH, _ReestrFrLic.Freq, _ReestrFrLic.remark " +
"FROM         (SELECT     fls_COMPANY_INFO.tax_id, fls_COMPANY_INFO.Comp_Name, fls_LICENCE_INFO.LICENCE, fls_LICENCE_FREQ.FREQ,  " +
"                                              fls_LICENCE_FREQ.BandWidth, Zone_City.city, dbo.fls_LICENCE_FREQ.remark " +
"                       FROM          fls_LICENCE_FREQ INNER JOIN " +
"                                              fls_LICENCE_INFO ON fls_LICENCE_FREQ.licence_id = fls_LICENCE_INFO.id INNER JOIN " +
"                                              fls_COMPANY_INFO ON fls_LICENCE_INFO.comp_id = fls_COMPANY_INFO.id INNER JOIN  " +
"                                              Zone_City ON fls_LICENCE_FREQ.city_id = Zone_City.id  " +
"                       WHERE      (fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (fls_LICENCE_FREQ.FREQ <> 0) AND (fls_LICENCE_INFO.LICENCE LIKE '__DB%') AND (fls_LICENCE_INFO.isCanceled <> 1)) " +
"                      AS _ReestrFrLic INNER JOIN " +
"                      Zone_City AS Zone_City_1 ON _ReestrFrLic.city = Zone_City_1.city INNER JOIN " +
"                      Channels ON _ReestrFrLic.Freq = Channels.Center " +
"ORDER BY _ReestrFrLic.city, Freq";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "DTV - მოსაზღვრო/უკანონო");
            writer.WriteElementString("open", "0");

            hs = new ZoneHash(ds);
            punktebi = new System.Collections.ArrayList();
            punkts = new List<Punkt>();
            foreach (string myKey in hs.znhash.Keys)
            {
                punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    string PrevFolder = "";
                    int space = 0;
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        if (((Punkt)punktebi[i]).city != PrevFolder) space = 0;
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).n = Convert.ToDouble(((Punkt)punktebi[i]).lat + 0.015 + 0.02 * space + 0.005);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).s = Convert.ToDouble(((Punkt)punktebi[i]).lat + 0.02 * space + 0.005);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).e = Convert.ToDouble(((Punkt)punktebi[i]).lon);
                        ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).w = Convert.ToDouble(((Punkt)punktebi[i]).lon - 0.019);
                        punkts.Add((Punkt)punktebi[i]);
                        PrevFolder = ((Punkt)punktebi[i]).city;
                        space++;
                    }
                }
            }

            PlotPunkts(writer, punkts, "/TV-BORD/", by_comps);


            //----------------------------------------------------------- LINKEBIS CHATSERA ------------------------------------------
            ds = new DataSet();
            connectionstring = DataBase.Properties.Settings.Default.OfficeConnectionString.ToString();
            northwindConnection = new SqlConnection(connectionstring);
            strSQL = "select * from Zone";
            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            da.Fill(ds);

            System.Collections.Hashtable znhash = new System.Collections.Hashtable();
            for (int k = 0; k < ds.Tables[0].Rows.Count; k++)
            {
                string str = ds.Tables[0].Rows[k]["Coords"].ToString();
                string[] s = str.Split(new string[] { ")(" }, StringSplitOptions.RemoveEmptyEntries);

                Point[] pt = new Point[s.GetLength(0)];
                for (int j = 0; j < s.GetLength(0); j++)
                {
                    s[j] = s[j].Replace("(", "");
                    s[j] = s[j].Replace(")", "");
                    string[] tmp = s[j].Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries);
                    pt[j] = new Point(Convert.ToInt32(Convert.ToDouble(tmp[0]) * 10000), Convert.ToInt32(Convert.ToDouble(tmp[1]) * 10000));
                }

                znhash.Add(ds.Tables[0].Rows[k]["Name"].ToString(), pt);
            }

            //sort values
            System.Collections.ArrayList sortedList = new System.Collections.ArrayList();
            sortedList.AddRange(znhash.Keys);
            sortedList.Sort();
            //values sorted


            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "Regions");
            writer.WriteElementString("open", "0");

            string lastfolder = "";
            string currfolder = "";
            foreach (string myKey in sortedList)
            {
                if (myKey.Contains("ARM_")) currfolder = "ARM";
                else if (myKey.Contains("AZE_")) currfolder = "AZE";
                else if (myKey.Contains("GEO_")) currfolder = "GEO";
                else if (myKey.Contains("RUS_")) currfolder = "RUS";
                else if (myKey.Contains("TUR_")) currfolder = "TUR";
                else currfolder = "";

                if (currfolder != lastfolder)
                {
                    if (lastfolder != "") writer.WriteEndElement();

                    if (currfolder != "")
                    {

                        if (currfolder == "ARM")
                        {
                            writer.WriteStartElement("Folder");
                            writer.WriteElementString("name", "ARMENIA");
                            writer.WriteElementString("open", "0");
                            lastfolder = "ARM";
                        }
                        else
                            if (currfolder == "AZE")
                            {
                                writer.WriteStartElement("Folder");
                                writer.WriteElementString("name", "AZERBAIJAN");
                                writer.WriteElementString("open", "0");
                                lastfolder = "AZE";
                            }
                            else
                                if (currfolder == "GEO")
                                {
                                    writer.WriteStartElement("Folder");
                                    writer.WriteElementString("name", "GEORGIA");
                                    writer.WriteElementString("open", "0");
                                    lastfolder = "GEO";
                                }
                                else
                                    if (currfolder == "RUS")
                                    {
                                        writer.WriteStartElement("Folder");
                                        writer.WriteElementString("name", "RUSSIA");
                                        writer.WriteElementString("open", "0");
                                        lastfolder = "RUS";
                                    }
                        if (currfolder == "TUR")
                        {
                            writer.WriteStartElement("Folder");
                            writer.WriteElementString("name", "TURKEY");
                            writer.WriteElementString("open", "0");
                            lastfolder = "TUR";
                        }


                    }
                    else lastfolder = "";

                }


                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", myKey);
                writer.WriteElementString("open", "0");


                Point[] pt = (Point[])znhash[myKey];
                for (int i = 0; i < pt.Length; i++)
                {
                    writer.WriteStartElement("Placemark");
                    writer.WriteStartElement("Style");
                    writer.WriteStartElement("LineStyle");
                    writer.WriteElementString("color", "7f00ffff");
                    writer.WriteElementString("width", "2");
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteStartElement("LineString");
                    writer.WriteElementString("tessellate", "1");
                    writer.WriteElementString("altitudeMode", "ClampedToGround");
                    writer.WriteStartElement("coordinates");
                    if (i == pt.Length - 1)
                    {
                        writer.WriteString((double)pt[i].X / 10000 + "," + (double)pt[i].Y / 10000 + ",1 ");
                        writer.WriteString((double)pt[0].X / 10000 + "," + (double)pt[0].Y / 10000 + ",1 ");
                    }
                    else
                    {
                        writer.WriteString((double)pt[i].X / 10000 + "," + (double)pt[i].Y / 10000 + ",1 ");
                        writer.WriteString((double)pt[i + 1].X / 10000 + "," + (double)pt[i + 1].Y / 10000 + ",1 ");
                    }
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteEndElement();

                }
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
            //----------------------------------------------------------- LINKEBIS CHATSERA ------------------------------------------

            writer.WriteEndElement();
            writer.WriteEndElement();
            writer.WriteEndDocument();
            writer.Flush();
            writer.Close();



        }

        private void exportByCompsItem_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            exportByChannels(true);
        }

        private void exportAllTVItem_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (saveFileDialog.ShowDialog() != DialogResult.OK) return;
            XmlTextWriter writer = new XmlTextWriter(saveFileDialog.FileName, System.Text.Encoding.UTF8);

            DataSet ds = new DataSet();




            string connectionstring = DataBase.Properties.Settings.Default.OfficeConnectionString.ToString();
            SqlConnection northwindConnection = new SqlConnection(connectionstring);
            string strSQL = "SELECT * from ALL_TV_Analog ORDER BY _ReestrFrLic.city, tp, Freq";

            SqlCommand cmd = new SqlCommand(strSQL, northwindConnection);
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            da.Fill(ds);


            writer.WriteStartDocument();
            writer.WriteStartElement("kml"); writer.WriteAttributeString("xmlns", "http://earth.google.com/kml/2.0");
            writer.WriteStartElement("Document");

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "My Places");

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "ანალოგური ტელევიზია");
            writer.WriteElementString("open", "0");


            ZoneHash hs = new ZoneHash(ds);
            System.Collections.ArrayList punktebi = new System.Collections.ArrayList();
            List<Punkt> punkts = new List<Punkt>();
            foreach (string myKey in hs.znhash.Keys)
            {
                punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    string PrevFolder = "";
                    int space = 0;
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        if (((Punkt)punktebi[i]).city != PrevFolder) space = 0;
                        if (i > 0 && ((Punkt)punktebi[i]).tp != ((Punkt)punktebi[i-1]).tp) space = 0;

                        if (((Punkt)punktebi[i]).tp == 0)
                        {
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).n = Convert.ToDouble(((Punkt)punktebi[i]).lat) - 0.02 * space;
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).s = Convert.ToDouble(((Punkt)punktebi[i]).lat - 0.015 - 0.02 * space);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).e = Convert.ToDouble(((Punkt)punktebi[i]).lon);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).w = Convert.ToDouble(((Punkt)punktebi[i]).lon - 0.019);
                        }
                        else if (((Punkt)punktebi[i]).tp == 1)
                        {
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).n = Convert.ToDouble(((Punkt)punktebi[i]).lat - 0.02 * space);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).s = Convert.ToDouble(((Punkt)punktebi[i]).lat - 0.015 - 0.02 * space);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).e = Convert.ToDouble(((Punkt)punktebi[i]).lon + 0.05);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).w = Convert.ToDouble(((Punkt)punktebi[i]).lon - 0.019 + 0.05);
                        }
                        else if (((Punkt)punktebi[i]).tp == 2)
                        {
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).n = Convert.ToDouble(((Punkt)punktebi[i]).lat + 0.015 + 0.02 * space + 0.005);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).s = Convert.ToDouble(((Punkt)punktebi[i]).lat + 0.02 * space + 0.005);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).e = Convert.ToDouble(((Punkt)punktebi[i]).lon);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).w = Convert.ToDouble(((Punkt)punktebi[i]).lon - 0.019);
                        }

                        punkts.Add((Punkt)punktebi[i]);
                        PrevFolder = ((Punkt)punktebi[i]).city;
                        space++;
                    }
                }
            }

            PlotPunkts(writer, punkts, "", false);



            


            //-----------DTV -----------------------------------------------------------------------------------------------
            strSQL = "SELECT * from ALL_TV_Digital ORDER BY _ReestrFrLic.city, tp, Freq";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "ციფრული ტელევიზია");
            writer.WriteElementString("open", "0");

            hs = new ZoneHash(ds);
            punktebi = new System.Collections.ArrayList();
            punkts = new List<Punkt>();
            foreach (string myKey in hs.znhash.Keys)
            {
                punktebi = (System.Collections.ArrayList)hs.znhash[myKey];
                if (punktebi.Count > 0)
                {
                    string PrevFolder = "";
                    int space = 0;
                    for (int i = 0; i < punktebi.Count; i++)
                    {
                        if (((Punkt)punktebi[i]).city != PrevFolder) space = 0;
                        if (i > 0 && ((Punkt)punktebi[i]).tp != ((Punkt)punktebi[i - 1]).tp) space = 0;

                        if (((Punkt)punktebi[i]).tp == 0)
                        {
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).n = Convert.ToDouble(((Punkt)punktebi[i]).lat) - 0.02 * space;
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).s = Convert.ToDouble(((Punkt)punktebi[i]).lat - 0.015 - 0.02 * space);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).e = Convert.ToDouble(((Punkt)punktebi[i]).lon);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).w = Convert.ToDouble(((Punkt)punktebi[i]).lon - 0.019);
                        }
                        else if (((Punkt)punktebi[i]).tp == 1)
                        {
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).n = Convert.ToDouble(((Punkt)punktebi[i]).lat - 0.02 * space);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).s = Convert.ToDouble(((Punkt)punktebi[i]).lat - 0.015 - 0.02 * space);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).e = Convert.ToDouble(((Punkt)punktebi[i]).lon + 0.05);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).w = Convert.ToDouble(((Punkt)punktebi[i]).lon - 0.019 + 0.05);
                        }
                        else if (((Punkt)punktebi[i]).tp == 2)
                        {
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).n = Convert.ToDouble(((Punkt)punktebi[i]).lat + 0.015 + 0.02 * space + 0.005);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).s = Convert.ToDouble(((Punkt)punktebi[i]).lat + 0.02 * space + 0.005);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).e = Convert.ToDouble(((Punkt)punktebi[i]).lon);
                            ((Punkt)((System.Collections.ArrayList)(System.Collections.ArrayList)hs.znhash[myKey])[i]).w = Convert.ToDouble(((Punkt)punktebi[i]).lon - 0.019);
                        }
                        
                        punkts.Add((Punkt)punktebi[i]);
                        PrevFolder = ((Punkt)punktebi[i]).city;
                        space++;
                    }
                }
            }

            PlotPunkts(writer, punkts, "", false);






            //----------------------------------------------------------- LINKEBIS CHATSERA ------------------------------------------
            ds = new DataSet();
            connectionstring = DataBase.Properties.Settings.Default.OfficeConnectionString.ToString();
            northwindConnection = new SqlConnection(connectionstring);
            strSQL = "select * from Zone";
            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            da.Fill(ds);

            System.Collections.Hashtable znhash = new System.Collections.Hashtable();
            for (int k = 0; k < ds.Tables[0].Rows.Count; k++)
            {
                string str = ds.Tables[0].Rows[k]["Coords"].ToString();
                string[] s = str.Split(new string[] { ")(" }, StringSplitOptions.RemoveEmptyEntries);

                Point[] pt = new Point[s.GetLength(0)];
                for (int j = 0; j < s.GetLength(0); j++)
                {
                    s[j] = s[j].Replace("(", "");
                    s[j] = s[j].Replace(")", "");
                    string[] tmp = s[j].Split(new string[] { "," }, StringSplitOptions.RemoveEmptyEntries);
                    pt[j] = new Point(Convert.ToInt32(Convert.ToDouble(tmp[0]) * 10000), Convert.ToInt32(Convert.ToDouble(tmp[1]) * 10000));
                }

                znhash.Add(ds.Tables[0].Rows[k]["Name"].ToString(), pt);
            }

            //sort values
            System.Collections.ArrayList sortedList = new System.Collections.ArrayList();
            sortedList.AddRange(znhash.Keys);
            sortedList.Sort();
            //values sorted


            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "Regions");
            writer.WriteElementString("open", "0");

            string lastfolder = "";
            string currfolder = "";
            foreach (string myKey in sortedList)
            {
                if (myKey.Contains("ARM_")) currfolder = "ARM";
                else if (myKey.Contains("AZE_")) currfolder = "AZE";
                else if (myKey.Contains("GEO_")) currfolder = "GEO";
                else if (myKey.Contains("RUS_")) currfolder = "RUS";
                else if (myKey.Contains("TUR_")) currfolder = "TUR";
                else currfolder = "";

                if (currfolder != lastfolder)
                {
                    if (lastfolder != "") writer.WriteEndElement();

                    if (currfolder != "")
                    {

                        if (currfolder == "ARM")
                        {
                            writer.WriteStartElement("Folder");
                            writer.WriteElementString("name", "ARMENIA");
                            writer.WriteElementString("open", "0");
                            lastfolder = "ARM";
                        }
                        else
                            if (currfolder == "AZE")
                            {
                                writer.WriteStartElement("Folder");
                                writer.WriteElementString("name", "AZERBAIJAN");
                                writer.WriteElementString("open", "0");
                                lastfolder = "AZE";
                            }
                            else
                                if (currfolder == "GEO")
                                {
                                    writer.WriteStartElement("Folder");
                                    writer.WriteElementString("name", "GEORGIA");
                                    writer.WriteElementString("open", "0");
                                    lastfolder = "GEO";
                                }
                                else
                                    if (currfolder == "RUS")
                                    {
                                        writer.WriteStartElement("Folder");
                                        writer.WriteElementString("name", "RUSSIA");
                                        writer.WriteElementString("open", "0");
                                        lastfolder = "RUS";
                                    }
                        if (currfolder == "TUR")
                        {
                            writer.WriteStartElement("Folder");
                            writer.WriteElementString("name", "TURKEY");
                            writer.WriteElementString("open", "0");
                            lastfolder = "TUR";
                        }


                    }
                    else lastfolder = "";

                }


                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", myKey);
                writer.WriteElementString("open", "0");


                Point[] pt = (Point[])znhash[myKey];
                for (int i = 0; i < pt.Length; i++)
                {
                    writer.WriteStartElement("Placemark");
                    writer.WriteStartElement("Style");
                    writer.WriteStartElement("LineStyle");
                    writer.WriteElementString("color", "7f00ffff");
                    writer.WriteElementString("width", "2");
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteStartElement("LineString");
                    writer.WriteElementString("tessellate", "1");
                    writer.WriteElementString("altitudeMode", "ClampedToGround");
                    writer.WriteStartElement("coordinates");
                    if (i == pt.Length - 1)
                    {
                        writer.WriteString((double)pt[i].X / 10000 + "," + (double)pt[i].Y / 10000 + ",1 ");
                        writer.WriteString((double)pt[0].X / 10000 + "," + (double)pt[0].Y / 10000 + ",1 ");
                    }
                    else
                    {
                        writer.WriteString((double)pt[i].X / 10000 + "," + (double)pt[i].Y / 10000 + ",1 ");
                        writer.WriteString((double)pt[i + 1].X / 10000 + "," + (double)pt[i + 1].Y / 10000 + ",1 ");
                    }
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                    writer.WriteEndElement();

                }
                writer.WriteEndElement();
            }
            writer.WriteEndElement();
            //----------------------------------------------------------- LINKEBIS CHATSERA ------------------------------------------

            writer.WriteEndElement();
            writer.WriteEndElement();
            writer.WriteEndDocument();
            writer.Flush();
            writer.Close();



        
        }








        private void PlotPunkts(XmlTextWriter writer, List<Punkt> punkts, string imgFolder, bool by_comps)
        {
            progress progForm = new progress("მიმდინარეობს ინიციალიზაცია...");
            progForm.Show();
            progForm.Refresh();

            if (!by_comps)
            {
                for (int i = 0; i < punkts.Count - 1; i++)
                {
                    Punkt a = punkts[i];
                    Punkt b = punkts[i + 1];
                    if (a.channel > b.channel)
                    {
                        punkts[i] = b;
                        punkts[i + 1] = a;
                        i = -1;
                    }
                }
            }
            else
            {
                for (int i = 0; i < punkts.Count - 1; i++)
                {
                    Punkt a = punkts[i];
                    Punkt b = punkts[i + 1];
                    if (string.Compare(a.comp_name, b.comp_name, true) > 0)
                    {
                        punkts[i] = b;
                        punkts[i + 1] = a;
                        i = -1;
                    }
                }
            }

            string prevFolder = "";
            //punktebi = (System.Collections.ArrayList)hs.znhash[myKey];

            if (!by_comps)
            {
                for (int i = 0; i < punkts.Count; i++)
                {
                    progForm.Refresh();
                    Punkt pk = punkts[i];

                    if (i == 0 || prevFolder != pk.channel.ToString())
                    {
                        writer.WriteStartElement("Folder");
                        writer.WriteElementString("name", (punkts[i]).channel.ToString());
                        writer.WriteElementString("open", "0");
                    }

                    writer.WriteStartElement("GroundOverlay");
                    writer.WriteElementString("name", (punkts[i]).city.ToString() + " - " + (punkts[i]).comp_name);
                    writer.WriteElementString("description", (punkts[i]).remark.ToString());
                    writer.WriteStartElement("Icon");
                    writer.WriteElementString("href", Properties.Settings.Default.ImagePath + imgFolder + (punkts[i]).img);
                    writer.WriteElementString("viewBoundScale", "0.75");
                    writer.WriteEndElement();
                    writer.WriteStartElement("LatLonBox");
                    writer.WriteElementString("north", Convert.ToString((punkts[i]).n));
                    writer.WriteElementString("south", Convert.ToString((punkts[i]).s));
                    writer.WriteElementString("east", Convert.ToString((punkts[i]).e));
                    writer.WriteElementString("west", Convert.ToString((punkts[i]).w));
                    writer.WriteEndElement();
                    writer.WriteEndElement();

                    prevFolder = pk.channel.ToString();

                    if (i == punkts.Count - 1) writer.WriteEndElement();
                    else if (!prevFolder.Equals((punkts[i + 1]).channel.ToString())) writer.WriteEndElement();
                }
            }
            else
            {
                for (int i = 0; i < punkts.Count; i++)
                {
                    progForm.Refresh();
                    Punkt pk = punkts[i];

                    if (i == 0 || prevFolder != pk.comp_name.ToString())
                    {
                        writer.WriteStartElement("Folder");
                        writer.WriteElementString("name", (punkts[i]).comp_name.ToString());
                        writer.WriteElementString("open", "0");
                    }

                    writer.WriteStartElement("GroundOverlay");
                    writer.WriteElementString("name", (punkts[i]).channel.ToString() + " - " + (punkts[i]).city);
                    writer.WriteElementString("description", (punkts[i]).remark.ToString());
                    writer.WriteStartElement("Icon");
                    writer.WriteElementString("href", Properties.Settings.Default.ImagePath + imgFolder + (punkts[i]).img);
                    writer.WriteElementString("viewBoundScale", "0.75");
                    writer.WriteEndElement();
                    writer.WriteStartElement("LatLonBox");
                    writer.WriteElementString("north", Convert.ToString((punkts[i]).n));
                    writer.WriteElementString("south", Convert.ToString((punkts[i]).s));
                    writer.WriteElementString("east", Convert.ToString((punkts[i]).e));
                    writer.WriteElementString("west", Convert.ToString((punkts[i]).w));
                    writer.WriteEndElement();
                    writer.WriteEndElement();

                    prevFolder = pk.comp_name.ToString();

                    if (i == punkts.Count - 1) writer.WriteEndElement();
                    else if (!prevFolder.Equals((punkts[i + 1]).comp_name.ToString())) writer.WriteEndElement();
                }
            }
            writer.WriteEndElement();

            progForm.Close();
        }

        private void ExportFmByCities_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (saveFileDialog.ShowDialog() != DialogResult.OK) return;
            XmlTextWriter writer = new XmlTextWriter(saveFileDialog.FileName, System.Text.Encoding.UTF8);

            DataSet ds = new DataSet();

            progress progForm = new progress("მიმდინარეობს ინიციალიზაცია...");
            progForm.Show();
            progForm.Refresh();


            string connectionstring = DataBase.Properties.Settings.Default.OfficeConnectionString.ToString();
            SqlConnection northwindConnection = new SqlConnection(connectionstring);
            string strSQL =
"select _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, _ReestrFrLic.Freq, _ReestrFrLic.BandWidth, "+
            "CASE WHEN _ReestrFrLic.LICENCE LIKE '#B%' THEN '/FM_TEMA/' WHEN _ReestrFrLic.LICENCE LIKE 'B%' THEN '/FM_RED/' WHEN _ReestrFrLic.LICENCE LIKE '_B%' " +
                       "THEN '/FM_FREE/' WHEN _ReestrFrLic.LICENCE LIKE '__B%' THEN '/FM_BORD/' END + CAST(_ReestrFrLic.FREQ / 100 AS varchar) + '.jpg' AS img, " +
            "_ReestrFrLic.remark, Zone_City.city, Zone_City.lat, Zone_City.lon  from " +
"( " +
"SELECT     dbo.fls_COMPANY_INFO.tax_id, dbo.fls_COMPANY_INFO.Comp_Name, dbo.fls_LICENCE_INFO.LICENCE, dbo.fls_LICENCE_FREQ.FREQ,  " +
"                      dbo.fls_LICENCE_FREQ.BandWidth, dbo.Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"FROM         dbo.fls_LICENCE_FREQ INNER JOIN " +
"                      dbo.fls_LICENCE_INFO ON dbo.fls_LICENCE_FREQ.licence_id = dbo.fls_LICENCE_INFO.id INNER JOIN " +
"                      dbo.fls_COMPANY_INFO ON dbo.fls_LICENCE_INFO.comp_id = dbo.fls_COMPANY_INFO.id INNER JOIN " +
"                      dbo.Zone_City ON dbo.fls_LICENCE_FREQ.city_id = dbo.Zone_City.id " +
"WHERE      (dbo.fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (dbo.fls_LICENCE_FREQ.FREQ <> 0) AND  " +
"                      (fls_LICENCE_INFO.LICENCE LIKE 'B%') AND (dbo.fls_LICENCE_INFO.isCanceled <> 1)" +
") as _ReestrFrLic " +
"INNER JOIN Zone_City ON _ReestrFrLic.id = Zone_City.id " +
"WHERE (_ReestrFrLic.Freq >= 87500) AND (_ReestrFrLic.Freq < 108000) " +
"ORDER BY _ReestrFrLic.city, Freq; ";

            SqlCommand cmd = new SqlCommand(strSQL, northwindConnection);
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            da.Fill(ds);

            writer.WriteStartDocument();
            writer.WriteStartElement("kml"); writer.WriteAttributeString("xmlns", "http://earth.google.com/kml/2.0");
            writer.WriteStartElement("Document");
            //-----------------------------------------------------------------------------------------------------
            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "FM - ლიცენზიით გაცემული");
            writer.WriteElementString("open", "1");

            string prevFolder = ds.Tables[0].Rows[0]["city"].ToString();
            int space = 0;
            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", ds.Tables[0].Rows[0]["city"].ToString());
            writer.WriteElementString("open", "0");
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                //------------------------------- DELENIE NA RAZNIE KOMPANII ------------------------
                if (prevFolder != ds.Tables[0].Rows[i]["city"].ToString())
                {
                    writer.WriteEndElement();
                    prevFolder = ds.Tables[0].Rows[i]["city"].ToString();
                    writer.WriteStartElement("Folder");
                    writer.WriteElementString("name", ds.Tables[0].Rows[i]["city"].ToString());
                    writer.WriteElementString("open", "0");
                    space = 0;
                }

                writer.WriteStartElement("GroundOverlay");
                writer.WriteElementString("name", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["Freq"]) / 1000) + "-" + ds.Tables[0].Rows[i]["Comp_Name"].ToString());
                writer.WriteElementString("description", ds.Tables[0].Rows[i]["remark"].ToString());
                writer.WriteStartElement("Icon");
                //writer.WriteElementString("href", Properties.Settings.Default.ImagePath + "/FM_RED/" + ds.Tables[0].Rows[i]["img"].ToString());
                writer.WriteElementString("href", Properties.Settings.Default.ImagePath + ds.Tables[0].Rows[i]["img"].ToString());
                writer.WriteElementString("viewBoundScale", "0.75");
                writer.WriteEndElement();
                writer.WriteStartElement("LatLonBox");
                writer.WriteElementString("north", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]) - 0.02 * space));
                writer.WriteElementString("south", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]) - 0.015 - 0.02 * space));
                writer.WriteElementString("east", ds.Tables[0].Rows[i]["lon"].ToString());
                writer.WriteElementString("west", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]) - 0.045));
                writer.WriteEndElement();
                writer.WriteEndElement();
                space++;
            }
            writer.WriteEndElement();
            writer.WriteEndElement();

            //----------------------------------------------------------------------------------------------------
            strSQL =
"select _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, _ReestrFrLic.Freq, _ReestrFrLic.BandWidth, " +
    "CASE WHEN _ReestrFrLic.LICENCE LIKE '#B%' THEN '/FM_TEMA/' WHEN _ReestrFrLic.LICENCE LIKE 'B%' THEN '/FM_RED/' WHEN _ReestrFrLic.LICENCE LIKE '_B%' " +
     "THEN '/FM_FREE/' WHEN _ReestrFrLic.LICENCE LIKE '__B%' THEN '/FM_BORD/' END + CAST(_ReestrFrLic.FREQ / 100 AS varchar) + '.jpg' AS img, " +
            "_ReestrFrLic.remark, Zone_City.city, Zone_City.lat, Zone_City.lon  from " +
"( " +
"SELECT     dbo.fls_COMPANY_INFO.tax_id, dbo.fls_COMPANY_INFO.Comp_Name, dbo.fls_LICENCE_INFO.LICENCE, dbo.fls_LICENCE_FREQ.FREQ,  " +
"                      dbo.fls_LICENCE_FREQ.BandWidth, dbo.Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"FROM         dbo.fls_LICENCE_FREQ INNER JOIN " +
"                      dbo.fls_LICENCE_INFO ON dbo.fls_LICENCE_FREQ.licence_id = dbo.fls_LICENCE_INFO.id INNER JOIN " +
"                      dbo.fls_COMPANY_INFO ON dbo.fls_LICENCE_INFO.comp_id = dbo.fls_COMPANY_INFO.id INNER JOIN " +
"                      dbo.Zone_City ON dbo.fls_LICENCE_FREQ.city_id = dbo.Zone_City.id " +
"WHERE      (dbo.fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (dbo.fls_LICENCE_FREQ.FREQ <> 0) AND  " +
"                      (fls_LICENCE_INFO.LICENCE LIKE '_B%') AND (dbo.fls_LICENCE_INFO.isCanceled <> 1)" +
") as _ReestrFrLic " +
"INNER JOIN Zone_City ON _ReestrFrLic.id = Zone_City.id " +
"WHERE (_ReestrFrLic.Freq >= 87500) AND (_ReestrFrLic.Freq < 108000) " +
"ORDER BY _ReestrFrLic.city, Freq; ";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "FM - თავისუფალი");
            writer.WriteElementString("open", "1");

            prevFolder = ds.Tables[0].Rows[0]["city"].ToString();
            space = 0;
            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", ds.Tables[0].Rows[0]["city"].ToString());
            writer.WriteElementString("open", "0");
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                //------------------------------- DELENIE NA RAZNIE KOMPANII ------------------------
                if (prevFolder != ds.Tables[0].Rows[i]["city"].ToString())
                {
                    writer.WriteEndElement();
                    prevFolder = ds.Tables[0].Rows[i]["city"].ToString();
                    writer.WriteStartElement("Folder");
                    writer.WriteElementString("name", ds.Tables[0].Rows[i]["city"].ToString());
                    writer.WriteElementString("open", "0");
                    space = 0;
                }

                writer.WriteStartElement("GroundOverlay");
                writer.WriteElementString("name", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["Freq"]) / 1000) + "-" + ds.Tables[0].Rows[i]["Comp_Name"].ToString());
                writer.WriteElementString("description", ds.Tables[0].Rows[i]["remark"].ToString());
                writer.WriteStartElement("Icon");
                //writer.WriteElementString("href", Properties.Settings.Default.ImagePath + "/FM_FREE/" + ds.Tables[0].Rows[i]["img"].ToString());
                writer.WriteElementString("href", Properties.Settings.Default.ImagePath + ds.Tables[0].Rows[i]["img"].ToString());
                writer.WriteElementString("viewBoundScale", "0.75");
                writer.WriteEndElement();
                writer.WriteStartElement("LatLonBox");
                writer.WriteElementString("north", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]) - 0.02 * space));
                writer.WriteElementString("south", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]) - 0.015 - 0.02 * space));
                writer.WriteElementString("east", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]) + 0.05));
                writer.WriteElementString("west", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]) - 0.045 + 0.05));
                writer.WriteEndElement();
                writer.WriteEndElement();
                space++;
            }
            writer.WriteEndElement();
            writer.WriteEndElement();

            //----------------------------------------------------------------------------------------------------

            strSQL =
"select _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, _ReestrFrLic.Freq, _ReestrFrLic.BandWidth, " +
     "CASE WHEN _ReestrFrLic.LICENCE LIKE '#B%' THEN '/FM_TEMA/' WHEN _ReestrFrLic.LICENCE LIKE 'B%' THEN '/FM_RED/' WHEN _ReestrFrLic.LICENCE LIKE '_B%' " +
     "THEN '/FM_FREE/' WHEN _ReestrFrLic.LICENCE LIKE '__B%' THEN '/FM_BORD/' END + CAST(_ReestrFrLic.FREQ / 100 AS varchar) + '.jpg' AS img, " +
            "_ReestrFrLic.remark, Zone_City.city, Zone_City.lat, Zone_City.lon  from " +
"( " +
"SELECT     dbo.fls_COMPANY_INFO.tax_id, dbo.fls_COMPANY_INFO.Comp_Name, dbo.fls_LICENCE_INFO.LICENCE, dbo.fls_LICENCE_FREQ.FREQ,  " +
"                      dbo.fls_LICENCE_FREQ.BandWidth, dbo.Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"FROM         dbo.fls_LICENCE_FREQ INNER JOIN " +
"                      dbo.fls_LICENCE_INFO ON dbo.fls_LICENCE_FREQ.licence_id = dbo.fls_LICENCE_INFO.id INNER JOIN " +
"                      dbo.fls_COMPANY_INFO ON dbo.fls_LICENCE_INFO.comp_id = dbo.fls_COMPANY_INFO.id INNER JOIN " +
"                      dbo.Zone_City ON dbo.fls_LICENCE_FREQ.city_id = dbo.Zone_City.id " +
"WHERE      (dbo.fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (dbo.fls_LICENCE_FREQ.FREQ <> 0) AND  " +
"                      (fls_LICENCE_INFO.LICENCE LIKE '__B%') AND (dbo.fls_LICENCE_INFO.isCanceled <> 1)" +
") as _ReestrFrLic " +
"INNER JOIN Zone_City ON _ReestrFrLic.id = Zone_City.id " +
"WHERE (_ReestrFrLic.Freq >= 87500) AND (_ReestrFrLic.Freq < 108000) " +
"ORDER BY _ReestrFrLic.city, Freq; ";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "FM - მოსაზღვრო/უკანონო");
            writer.WriteElementString("open", "1");


            prevFolder = ds.Tables[0].Rows[0]["city"].ToString();
            space = 0;
            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", ds.Tables[0].Rows[0]["city"].ToString());
            writer.WriteElementString("open", "0");
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                //------------------------------- DELENIE NA RAZNIE KOMPANII ------------------------
                if (prevFolder != ds.Tables[0].Rows[i]["city"].ToString())
                {
                    writer.WriteEndElement();
                    prevFolder = ds.Tables[0].Rows[i]["city"].ToString();
                    writer.WriteStartElement("Folder");
                    writer.WriteElementString("name", ds.Tables[0].Rows[i]["city"].ToString());
                    writer.WriteElementString("open", "0");
                    space = 0;
                }

                writer.WriteStartElement("GroundOverlay");
                writer.WriteElementString("name", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["Freq"]) / 1000) + "-" + ds.Tables[0].Rows[i]["Comp_Name"].ToString());
                writer.WriteElementString("description", ds.Tables[0].Rows[i]["remark"].ToString());
                writer.WriteStartElement("Icon");
                //writer.WriteElementString("href", Properties.Settings.Default.ImagePath + "/FM_BORD/" + ds.Tables[0].Rows[i]["img"].ToString());
                writer.WriteElementString("href", Properties.Settings.Default.ImagePath + ds.Tables[0].Rows[i]["img"].ToString());
                writer.WriteElementString("viewBoundScale", "0.75");
                writer.WriteEndElement();
                writer.WriteStartElement("LatLonBox");
                writer.WriteElementString("north", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]) + 0.02 * space));
                writer.WriteElementString("south", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]) + 0.015 + 0.02 * space));
                writer.WriteElementString("east", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]) + 0.05));
                writer.WriteElementString("west", Convert.ToString(Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]) - 0.045 + 0.05));
                writer.WriteEndElement();
                writer.WriteEndElement();
                space++;
            }
            writer.WriteEndElement();

            writer.WriteEndElement();

            //----------------------------------------------------------------------------------------------------



            writer.WriteEndElement();
            writer.WriteEndDocument();
            writer.Flush();
            writer.Close();

            progForm.Close();
       

        }

        private void ExportFmByFreqs_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            ExportFmByFreq(false);
        }

        private void ExportFmByFreq(bool by_comps)
        {
            if (saveFileDialog.ShowDialog() != DialogResult.OK) return;
            XmlTextWriter writer = new XmlTextWriter(saveFileDialog.FileName, System.Text.Encoding.UTF8);

            DataSet ds = new DataSet();

            progress progForm = new progress("მიმდინარეობს ინიციალიზაცია...");
            progForm.Show();
            progForm.Refresh();



            writer.WriteStartDocument();
            writer.WriteStartElement("kml"); writer.WriteAttributeString("xmlns", "http://earth.google.com/kml/2.0");
            writer.WriteStartElement("Document");
            //-----------------------------------------------------------------------------------------------------

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "FM - ლიცენზიით გაცემული");
            writer.WriteElementString("open", "1");

            string connectionstring = DataBase.Properties.Settings.Default.OfficeConnectionString.ToString();
            SqlConnection northwindConnection = new SqlConnection(connectionstring);
            string strSQL =
"select _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, _ReestrFrLic.Freq, _ReestrFrLic.BandWidth, CAST(_ReestrFrLic.Freq / 100 AS varchar) + '.jpg' AS img, _ReestrFrLic.remark, Zone_City.city, Zone_City.lat, Zone_City.lon  from " +
"( " +
"SELECT     dbo.fls_COMPANY_INFO.tax_id, dbo.fls_COMPANY_INFO.Comp_Name, dbo.fls_LICENCE_INFO.LICENCE, dbo.fls_LICENCE_FREQ.FREQ,  " +
"                      dbo.fls_LICENCE_FREQ.BandWidth, dbo.Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"FROM         dbo.fls_LICENCE_FREQ INNER JOIN " +
"                      dbo.fls_LICENCE_INFO ON dbo.fls_LICENCE_FREQ.licence_id = dbo.fls_LICENCE_INFO.id INNER JOIN " +
"                      dbo.fls_COMPANY_INFO ON dbo.fls_LICENCE_INFO.comp_id = dbo.fls_COMPANY_INFO.id INNER JOIN " +
"                      dbo.Zone_City ON dbo.fls_LICENCE_FREQ.city_id = dbo.Zone_City.id " +
"WHERE      (dbo.fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (dbo.fls_LICENCE_FREQ.FREQ <> 0) AND  " +
"                      (fls_LICENCE_INFO.LICENCE LIKE 'B%') AND (dbo.fls_LICENCE_INFO.isCanceled <> 1)" +
") as _ReestrFrLic " +
"INNER JOIN Zone_City ON _ReestrFrLic.id = Zone_City.id " +
"WHERE (_ReestrFrLic.Freq >= 87500) AND (_ReestrFrLic.Freq < 108000) " +
"ORDER BY _ReestrFrLic.city, Freq; ";

            SqlCommand cmd = new SqlCommand(strSQL, northwindConnection);
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            da.Fill(ds);

            List<Punkt> punktebi = new List<Punkt>();
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                Punkt pk = new Punkt();
                pk.city = ds.Tables[0].Rows[i]["city"].ToString();
                pk.fm_channel = Convert.ToInt32(ds.Tables[0].Rows[i]["Freq"]);
                pk.comp_name = ds.Tables[0].Rows[i]["Comp_Name"].ToString();
                pk.lat = Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]);
                pk.lon = Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]);
                pk.img = ds.Tables[0].Rows[i]["img"].ToString();
                pk.remark = ds.Tables[0].Rows[i]["remark"].ToString();
                punktebi.Add(pk);
            }

            string prevFolder = "";
            int space = 0;
            for (int i = 0; i < punktebi.Count; i++)
            {
                if (prevFolder != punktebi[i].city)
                {
                    prevFolder = punktebi[i].city;
                    space = 0;
                }
                punktebi[i].n = punktebi[i].lat - 0.02 * space;
                punktebi[i].s = punktebi[i].lat - 0.015 - 0.02 * space;
                punktebi[i].e = punktebi[i].lon;
                punktebi[i].w = punktebi[i].lon - 0.045;
                space++;
            }



            plotFM(punktebi, writer, "/FM_RED/", by_comps);



            //----------------------------------------------------------------------------------------------------
            strSQL =
"select _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, _ReestrFrLic.Freq, _ReestrFrLic.BandWidth, "+ 
            "CASE WHEN _ReestrFrLic.LICENCE LIKE '#B%' THEN '/FM_TEMA/' WHEN _ReestrFrLic.LICENCE LIKE 'B%' THEN '/FM_RED/' WHEN _ReestrFrLic.LICENCE LIKE '_B%' " +
                       "THEN '/FM_FREE/' WHEN _ReestrFrLic.LICENCE LIKE '__B%' THEN '/FM_BORD/' END + CAST(_ReestrFrLic.FREQ / 100 AS varchar) + '.jpg' AS img, " +
            "_ReestrFrLic.remark, Zone_City.city, Zone_City.lat, Zone_City.lon  from " +
"( " +
"SELECT     dbo.fls_COMPANY_INFO.tax_id, dbo.fls_COMPANY_INFO.Comp_Name, dbo.fls_LICENCE_INFO.LICENCE, dbo.fls_LICENCE_FREQ.FREQ,  " +
"                      dbo.fls_LICENCE_FREQ.BandWidth, dbo.Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"FROM         dbo.fls_LICENCE_FREQ INNER JOIN " +
"                      dbo.fls_LICENCE_INFO ON dbo.fls_LICENCE_FREQ.licence_id = dbo.fls_LICENCE_INFO.id INNER JOIN " +
"                      dbo.fls_COMPANY_INFO ON dbo.fls_LICENCE_INFO.comp_id = dbo.fls_COMPANY_INFO.id INNER JOIN " +
"                      dbo.Zone_City ON dbo.fls_LICENCE_FREQ.city_id = dbo.Zone_City.id " +
"WHERE      (dbo.fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (dbo.fls_LICENCE_FREQ.FREQ <> 0) AND  " +
"                      (fls_LICENCE_INFO.LICENCE LIKE '_B%') AND (dbo.fls_LICENCE_INFO.isCanceled <> 1)" +
") as _ReestrFrLic " +
"INNER JOIN Zone_City ON _ReestrFrLic.id = Zone_City.id " +
"WHERE (_ReestrFrLic.Freq >= 87500) AND (_ReestrFrLic.Freq < 108000) " +
"ORDER BY _ReestrFrLic.city, Freq; ";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "FM - თავისუფალი");
            writer.WriteElementString("open", "1");

            punktebi = new List<Punkt>();
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                Punkt pk = new Punkt();
                pk.city = ds.Tables[0].Rows[i]["city"].ToString();
                pk.fm_channel = Convert.ToInt32(ds.Tables[0].Rows[i]["Freq"]);
                pk.comp_name = ds.Tables[0].Rows[i]["Comp_Name"].ToString();
                pk.lat = Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]);
                pk.lon = Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]);
                pk.img = ds.Tables[0].Rows[i]["img"].ToString();
                pk.remark = ds.Tables[0].Rows[i]["remark"].ToString();
                punktebi.Add(pk);
            }

            prevFolder = "";
            space = 0;
            for (int i = 0; i < punktebi.Count; i++)
            {
                if (prevFolder != punktebi[i].city)
                {
                    prevFolder = punktebi[i].city;
                    space = 0;
                }
                punktebi[i].n = punktebi[i].lat - 0.02 * space;
                punktebi[i].s = punktebi[i].lat - 0.015 - 0.02 * space;
                punktebi[i].e = punktebi[i].lon + 0.05;
                punktebi[i].w = punktebi[i].lon - 0.045 + 0.05;
                space++;
            }

            for (int i = 0; i < punktebi.Count - 1; i++)
            {
                Punkt a = punktebi[i];
                Punkt b = punktebi[i + 1];
                if (a.fm_channel > b.fm_channel)
                {
                    punktebi[i] = b;
                    punktebi[i + 1] = a;
                    i = -1;
                }
            }

            //plotFM(punktebi, writer, "/FM_FREE/", by_comps);
            plotFM(punktebi, writer, "", by_comps);


            //----------------------------------------------------------------------------------------------------

            strSQL =
"select _ReestrFrLic.tax_id, _ReestrFrLic.Comp_Name, _ReestrFrLic.LICENCE, _ReestrFrLic.Freq, _ReestrFrLic.BandWidth, CAST(_ReestrFrLic.Freq / 100 AS varchar) + '.jpg' AS img, _ReestrFrLic.remark, Zone_City.city, Zone_City.lat, Zone_City.lon  from " +
"( " +
"SELECT     dbo.fls_COMPANY_INFO.tax_id, dbo.fls_COMPANY_INFO.Comp_Name, dbo.fls_LICENCE_INFO.LICENCE, dbo.fls_LICENCE_FREQ.FREQ,  " +
"                      dbo.fls_LICENCE_FREQ.BandWidth, dbo.Zone_City.city, Zone_City.id, dbo.fls_LICENCE_FREQ.remark " +
"FROM         dbo.fls_LICENCE_FREQ INNER JOIN " +
"                      dbo.fls_LICENCE_INFO ON dbo.fls_LICENCE_FREQ.licence_id = dbo.fls_LICENCE_INFO.id INNER JOIN " +
"                      dbo.fls_COMPANY_INFO ON dbo.fls_LICENCE_INFO.comp_id = dbo.fls_COMPANY_INFO.id INNER JOIN " +
"                      dbo.Zone_City ON dbo.fls_LICENCE_FREQ.city_id = dbo.Zone_City.id " +
"WHERE      (dbo.fls_LICENCE_FREQ.FREQ IS NOT NULL) AND (dbo.fls_LICENCE_FREQ.FREQ <> 0) AND  " +
"                      (fls_LICENCE_INFO.LICENCE LIKE '__B%') AND (dbo.fls_LICENCE_INFO.isCanceled <> 1)" +
") as _ReestrFrLic " +
"INNER JOIN Zone_City ON _ReestrFrLic.id = Zone_City.id " +
"WHERE (_ReestrFrLic.Freq >= 87500) AND (_ReestrFrLic.Freq < 108000) " +
"ORDER BY _ReestrFrLic.city, Freq; ";

            cmd = new SqlCommand(strSQL, northwindConnection);
            da = new SqlDataAdapter(cmd);
            ds.Clear();
            da.Fill(ds);

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "FM - მოსაზღვრო/უკანონო");
            writer.WriteElementString("open", "1");

            punktebi = new List<Punkt>();
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                Punkt pk = new Punkt();
                pk.city = ds.Tables[0].Rows[i]["city"].ToString();
                pk.fm_channel = Convert.ToInt32(ds.Tables[0].Rows[i]["Freq"]);
                pk.comp_name = ds.Tables[0].Rows[i]["Comp_Name"].ToString();
                pk.lat = Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]);
                pk.lon = Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]);
                pk.img = ds.Tables[0].Rows[i]["img"].ToString();
                pk.remark = ds.Tables[0].Rows[i]["remark"].ToString();
                punktebi.Add(pk);
            }

            prevFolder = "";
            space = 0;
            for (int i = 0; i < punktebi.Count; i++)
            {
                if (prevFolder != punktebi[i].city)
                {
                    prevFolder = punktebi[i].city;
                    space = 0;
                }
                punktebi[i].n = punktebi[i].lat + 0.02 * space;
                punktebi[i].s = punktebi[i].lat + 0.015 + 0.02 * space;
                punktebi[i].e = punktebi[i].lon + 0.05;
                punktebi[i].w = punktebi[i].lon - 0.045 + 0.05;
                space++;
            }

            for (int i = 0; i < punktebi.Count - 1; i++)
            {
                Punkt a = punktebi[i];
                Punkt b = punktebi[i + 1];
                if (a.fm_channel > b.fm_channel)
                {
                    punktebi[i] = b;
                    punktebi[i + 1] = a;
                    i = -1;
                }
            }

            plotFM(punktebi, writer, "/FM_BORD/", by_comps);



            //----------------------------------------------------------------------------------------------------



            writer.WriteEndElement();
            writer.WriteEndDocument();
            writer.Flush();
            writer.Close();

            progForm.Close();
        }

        private void ExportFmByComps_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            ExportFmByFreq(true);
        }

        private void ExportAllFmByFreqs_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (saveFileDialog.ShowDialog() != DialogResult.OK) return;
            XmlTextWriter writer = new XmlTextWriter(saveFileDialog.FileName, System.Text.Encoding.UTF8);

            DataSet ds = new DataSet();

            progress progForm = new progress("მიმდინარეობს ინიციალიზაცია...");
            progForm.Show();
            progForm.Refresh();



            writer.WriteStartDocument();
            writer.WriteStartElement("kml"); writer.WriteAttributeString("xmlns", "http://earth.google.com/kml/2.0");
            writer.WriteStartElement("Document");
            //-----------------------------------------------------------------------------------------------------

            writer.WriteStartElement("Folder");
            writer.WriteElementString("name", "FM");
            writer.WriteElementString("open", "1");

            string connectionstring = DataBase.Properties.Settings.Default.OfficeConnectionString.ToString();
            SqlConnection northwindConnection = new SqlConnection(connectionstring);
            string strSQL = "select * from ALL_FM ORDER BY city, tp, freq";

            SqlCommand cmd = new SqlCommand(strSQL, northwindConnection);
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            da.Fill(ds);

            List<Punkt> punktebi = new List<Punkt>();
            for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
            {
                Punkt pk = new Punkt();
                pk.city = ds.Tables[0].Rows[i]["city"].ToString();
                pk.fm_channel = Convert.ToInt32(ds.Tables[0].Rows[i]["Freq"]);
                pk.comp_name = ds.Tables[0].Rows[i]["Comp_Name"].ToString();
                pk.lat = Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]);
                pk.lon = Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]);
                pk.img = ds.Tables[0].Rows[i]["img"].ToString();
                pk.remark = ds.Tables[0].Rows[i]["remark"].ToString();
                pk.tp = Convert.ToInt16(ds.Tables[0].Rows[i]["tp"]);
                punktebi.Add(pk);
            }


            string prevFolder = "";
            int space = 0;
            for (int i = 0; i < punktebi.Count; i++)
            {
                if (prevFolder != punktebi[i].city)
                {
                    prevFolder = punktebi[i].city;
                    space = 0;
                }
                if (i > 0 && punktebi[i].tp != punktebi[i - 1].tp) space = 0;

                if (punktebi[i].tp == 0)
                {
                    punktebi[i].n = punktebi[i].lat - 0.02 * space;
                    punktebi[i].s = punktebi[i].lat - 0.015 - 0.02 * space;
                    punktebi[i].e = punktebi[i].lon;
                    punktebi[i].w = punktebi[i].lon - 0.045;
                }
                else if (punktebi[i].tp == 1)
                {
                    punktebi[i].n = punktebi[i].lat - 0.02 * space;
                    punktebi[i].s = punktebi[i].lat - 0.015 - 0.02 * space;
                    punktebi[i].e = punktebi[i].lon + 0.05;
                    punktebi[i].w = punktebi[i].lon - 0.045 + 0.05;
                }
                else if (punktebi[i].tp == 2)
                {
                    punktebi[i].n = punktebi[i].lat + 0.02 * space;
                    punktebi[i].s = punktebi[i].lat + 0.015 + 0.02 * space;
                    punktebi[i].e = punktebi[i].lon + 0.05;
                    punktebi[i].w = punktebi[i].lon - 0.045 + 0.05;
                }

                space++;
            }



            plotFM(punktebi, writer, "", false);



            writer.WriteEndElement();
            writer.WriteEndDocument();
            writer.Flush();
            writer.Close();

            progForm.Close();
        

        }

        private void plotFM(List<Punkt> punktebi, XmlTextWriter writer, string ImgFolder, bool by_comps)
        {
            if (!by_comps)
            {
                for (int i = 0; i < punktebi.Count - 1; i++)
                {
                    Punkt a = punktebi[i];
                    Punkt b = punktebi[i + 1];
                    if (a.fm_channel > b.fm_channel)
                    {
                        punktebi[i] = b;
                        punktebi[i + 1] = a;
                        i = -1;
                    }
                }

                double prvFolder = punktebi[0].fm_channel;
                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", prvFolder.ToString());
                writer.WriteElementString("open", "0");
                for (int i = 0; i < punktebi.Count; i++)
                {
                    if (prvFolder != punktebi[i].fm_channel)
                    {
                        writer.WriteEndElement();
                        prvFolder = punktebi[i].fm_channel;
                        writer.WriteStartElement("Folder");
                        writer.WriteElementString("name", punktebi[i].fm_channel.ToString());
                        writer.WriteElementString("open", "0");
                    }

                    writer.WriteStartElement("GroundOverlay");
                    writer.WriteElementString("name", Convert.ToString(punktebi[i].city) + "-" + punktebi[i].comp_name);
                    writer.WriteElementString("description", Convert.ToString(punktebi[i].remark));
                    writer.WriteStartElement("Icon");
                    writer.WriteElementString("href", Properties.Settings.Default.ImagePath + ImgFolder + punktebi[i].img);
                    writer.WriteElementString("viewBoundScale", "0.75");
                    writer.WriteEndElement();
                    writer.WriteStartElement("LatLonBox");
                    writer.WriteElementString("north", punktebi[i].n.ToString());
                    writer.WriteElementString("south", punktebi[i].s.ToString());
                    writer.WriteElementString("east", punktebi[i].e.ToString());
                    writer.WriteElementString("west", punktebi[i].w.ToString());
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
                writer.WriteEndElement();
            }
            else
            {
                for (int i = 0; i < punktebi.Count - 1; i++)
                {
                    Punkt a = punktebi[i];
                    Punkt b = punktebi[i + 1];
                    if (string.Compare(a.comp_name, b.comp_name, true) > 0)
                    {
                        punktebi[i] = b;
                        punktebi[i + 1] = a;
                        i = -1;
                    }
                }

                string prvFolder = punktebi[0].comp_name;
                writer.WriteStartElement("Folder");
                writer.WriteElementString("name", prvFolder.ToString());
                writer.WriteElementString("open", "0");
                for (int i = 0; i < punktebi.Count; i++)
                {
                    if (prvFolder != punktebi[i].comp_name)
                    {
                        writer.WriteEndElement();
                        prvFolder = punktebi[i].comp_name;
                        writer.WriteStartElement("Folder");
                        writer.WriteElementString("name", punktebi[i].comp_name);
                        writer.WriteElementString("open", "0");
                    }

                    writer.WriteStartElement("GroundOverlay");
                    writer.WriteElementString("name", Convert.ToString(punktebi[i].fm_channel) + "-" + punktebi[i].city);
                    writer.WriteElementString("description", Convert.ToString(punktebi[i].remark));
                    writer.WriteStartElement("Icon");
                    writer.WriteElementString("href", Properties.Settings.Default.ImagePath + ImgFolder + punktebi[i].img);
                    writer.WriteElementString("viewBoundScale", "0.75");
                    writer.WriteEndElement();
                    writer.WriteStartElement("LatLonBox");
                    writer.WriteElementString("north", punktebi[i].n.ToString());
                    writer.WriteElementString("south", punktebi[i].s.ToString());
                    writer.WriteElementString("east", punktebi[i].e.ToString());
                    writer.WriteElementString("west", punktebi[i].w.ToString());
                    writer.WriteEndElement();
                    writer.WriteEndElement();
                }
                writer.WriteEndElement();
                writer.WriteEndElement();
            }


        }

        private void relExportBtn_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            ArrayList rows = new ArrayList();
            // Add the selected rows to the list.
            for (int i = 0; i < gridView1.SelectedRowsCount; i++)
            {
                if (gridView1.GetSelectedRows()[i] >= 0)
                    rows.Add(gridView1.GetDataRow(gridView1.GetSelectedRows()[i]));
            }

            RelRoutines.export_stations(rows, DataBase.Properties.Settings.Default.OfficeConnectionString.ToString());
        }

        private void gridView1_SelectionChanged(object sender, DevExpress.Data.SelectionChangedEventArgs e)
        {
            try
            {
                newPasswordBtn.Enabled = (_user.ReestritCheck && Convert.ToInt32(gridView1.GetFocusedDataRow()["dasajarimebeli"]) == 99 && gridView1.SelectedRowsCount == 1);
                printPasswordBtn.Enabled = (_user.ReestritCheck && Convert.ToInt32(gridView1.GetFocusedDataRow()["dasajarimebeli"]) != 99);
                stationsExportBtn.Enabled = gridView1.DataRowCount > 0;
            }
            catch { newPasswordBtn.Enabled = false; printPasswordBtn.Enabled = false; stationsExportBtn.Enabled = false; }
            

            ArrayList rows = new ArrayList();
            // Add the selected rows to the list.
            for (int j = 0; j < gridView1.SelectedRowsCount; j++)
            {
                if (gridView1.GetSelectedRows()[j] >= 0)
                    rows.Add(gridView1.GetDataRow(gridView1.GetSelectedRows()[j]));
                if (gridView1.SelectedRowsCount == 1)
                {
                    if (workerThread != null)
                    {
                        workerThread.Abort();
                        Thread.Sleep(100);
                    }
                    workerThread = new Thread(() => plotStationOnMap(gridView1.GetSelectedRows()[0]));
                    workerThread.Start();
                    Thread.Sleep(50);
                }
            }

            int i = RelRoutines.sul_releika_monishvnashi(rows, DataBase.Properties.Settings.Default.OfficeConnectionString.ToString());
            if (i > 0) relExportBtn.Enabled = true; else relExportBtn.Enabled = false;
            relExportBtn.Caption = "სარელეო სადგურები (" + i.ToString() + ")";
        }

        private void printPasswordBtn_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            DataSet ds = new DataSet();
            string connectionstring = DataBase.Properties.Settings.Default.ActivityLogConnectionString.ToString();
            System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(connectionstring);
            SqlCommand cmd = new SqlCommand("select * from [shekvanili sadgurebi] where id=" + gridView1.GetFocusedRowCellValue("id").ToString(), conn);
            SqlDataAdapter da = new SqlDataAdapter(cmd);
            da.Fill(ds);

            Reports.password rep = new Fams.Reports.password();
            rep.Database.Tables["shekvanili_sadgurebi"].SetDataSource(ds.Tables[0]);
            Reports.RepPreview preview = new Fams.Reports.RepPreview();
            preview.crystalReportViewer.ReportSource = rep;
            //preview.crystalReportViewer.PrintReport();
            preview.ShowDialog();
        }

        private void barButtonItem1_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (_user.ReestritCheck)
            {
                int selRow = gridView1.FocusedRowHandle;
                frmUser passform = new frmUser(Convert.ToInt32(gridView1.GetFocusedRowCellValue("id")));
                if (passform.ShowDialog() == System.Windows.Forms.DialogResult.OK)
                {
                    paroliani_da_uparolo_kompaniebiTableAdapter.Fill(officeDataSet.paroliani_da_uparolo_kompaniebi);
                    gridView1.SelectRow(selRow);
                }
            }
        }

    
        private void plotStationOnMap(int row)
        {
            this.BeginInvoke((Action)delegate() { mapControl.Enabled = false; });
            

                int id = (int)gridView1.GetRowCellValue(row, colid);
                DevExpress.XtraMap.VectorItemsLayer itemsLayer = mapControl.Layers[0] as DevExpress.XtraMap.VectorItemsLayer;
                DevExpress.XtraMap.MapItemStorage storage = new DevExpress.XtraMap.MapItemStorage();
                itemsLayer.Data = storage;

                DataSet ds = HelperFunctions.fill("select * from st_portable where comp_id=" + id, DataBase.Properties.Settings.Default.OfficeConnectionString);
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    DevExpress.XtraMap.MapPushpin pin = new DevExpress.XtraMap.MapPushpin();
                    pin.Image = portable;
                    pin.Location = new DevExpress.XtraMap.GeoPoint(Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]), Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]));
                    storage.Items.Add(pin);
                }


                ds = HelperFunctions.fill("select * from st_radiocom where comp_id=" + id, DataBase.Properties.Settings.Default.OfficeConnectionString);
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    DevExpress.XtraMap.MapPushpin pin = new DevExpress.XtraMap.MapPushpin();
                    pin.Image = radiocom;
                    pin.Location = new DevExpress.XtraMap.GeoPoint(Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]), Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]));
                    storage.Items.Add(pin);
                }

                ds = HelperFunctions.fill("select * from st_rel_fixed where comp_id=" + id, DataBase.Properties.Settings.Default.OfficeConnectionString);
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    DevExpress.XtraMap.MapPushpin pin = new DevExpress.XtraMap.MapPushpin();
                    pin.Image = rel_fixed;
                    pin.Location = new DevExpress.XtraMap.GeoPoint(Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]), Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]));
                    storage.Items.Add(pin);
                }

                ds = HelperFunctions.fill("select * from st_rel_mobile where comp_id=" + id, DataBase.Properties.Settings.Default.OfficeConnectionString);
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    DevExpress.XtraMap.MapPushpin pin = new DevExpress.XtraMap.MapPushpin();
                    pin.Image = rel_mobile;
                    pin.Location = new DevExpress.XtraMap.GeoPoint(Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]), Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]));
                    storage.Items.Add(pin);
                }

                ds = HelperFunctions.fill("select * from st_rel_passive where comp_id=" + id, DataBase.Properties.Settings.Default.OfficeConnectionString);
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    DevExpress.XtraMap.MapPushpin pin = new DevExpress.XtraMap.MapPushpin();
                    pin.Image = rel_passive;
                    pin.Location = new DevExpress.XtraMap.GeoPoint(Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]), Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]));
                    storage.Items.Add(pin);
                }

                ds = HelperFunctions.fill("select * from st_gsm where comp_id=" + id, DataBase.Properties.Settings.Default.OfficeConnectionString);
                for (int i = 0; i < ds.Tables[0].Rows.Count; i++)
                {
                    DevExpress.XtraMap.MapPushpin pin = new DevExpress.XtraMap.MapPushpin();
                    pin.Image = gsm;
                    pin.Location = new DevExpress.XtraMap.GeoPoint(Convert.ToDouble(ds.Tables[0].Rows[i]["lat"]), Convert.ToDouble(ds.Tables[0].Rows[i]["lon"]));
                    storage.Items.Add(pin);
                }

                Debug.WriteLine(id);

                this.BeginInvoke((Action)delegate() { mapControl.Enabled = true; });
        }

       

    }
}
